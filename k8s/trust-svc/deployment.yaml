apiVersion: apps/v1
kind: Deployment
metadata:
  name: trust-svc
  namespace: marty
  labels:
    app: trust-svc
    component: service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: trust-svc
      component: service
  template:
    metadata:
      labels:
        app: trust-svc
        component: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: trust-svc
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: trust-svc
        image: marty/trust-svc:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: SERVICE_NAME
          value: "trust-svc"
        - name: TRUST_DB_HOST
          value: "postgres"
        - name: TRUST_DB_PORT
          value: "5432"
        - name: TRUST_DB_NAME
          value: "martydb"
        - name: TRUST_DB_USER
          value: "martyuser"
        - name: TRUST_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trust-svc-secrets
              key: database-password
        - name: TRUST_SERVICE_HOST
          value: "0.0.0.0"
        - name: TRUST_SERVICE_PORT
          value: "8080"
        - name: TRUST_SERVICE_LOG_LEVEL
          value: "INFO"
        - name: TRUST_PKD_REFRESH_INTERVAL
          value: "3600"
        - name: PROMETHEUS_MULTIPROC_DIR
          value: "/tmp/prometheus_multiproc"
        - name: KMS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: trust-svc-secrets
              key: kms-key-id
              optional: true
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/admin/status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/admin/status
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/v1/admin/status
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: config
        configMap:
          name: trust-svc-config
      - name: data
        persistentVolumeClaim:
          claimName: trust-svc-data
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30