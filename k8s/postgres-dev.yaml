apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: marty
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: marty-local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-dev
  namespace: marty
  labels:
    app: postgres-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-dev
  template:
    metadata:
      labels:
        app: postgres-dev
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: martyuser
            - name: POSTGRES_PASSWORD
              value: martypassword
            - name: POSTGRES_DB
              value: martydb
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "pg_isready -U martyuser -d martydb"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "pg_isready -U martyuser -d martydb"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 150m
              memory: 256Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-data
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: marty
  labels:
    app: postgres-dev
spec:
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: 5432
  selector:
    app: postgres-dev
  type: ClusterIP