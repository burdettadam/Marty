syntax = "proto3";

package visa_service;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Visa Service Definition
service VisaService {
    // Create a new visa
    rpc CreateVisa(CreateVisaRequest) returns (CreateVisaResponse);
    
    // Issue a visa (finalize)
    rpc IssueVisa(IssueVisaRequest) returns (IssueVisaResponse);
    
    // Verify a visa
    rpc VerifyVisa(VerifyVisaRequest) returns (VerifyVisaResponse);
    
    // Get visa by ID
    rpc GetVisa(GetVisaRequest) returns (GetVisaResponse);
    
    // Search visas
    rpc SearchVisas(SearchVisasRequest) returns (SearchVisasResponse);
    
    // Update visa status
    rpc UpdateVisaStatus(UpdateVisaStatusRequest) returns (UpdateVisaStatusResponse);
    
    // Revoke visa
    rpc RevokeVisa(RevokeVisaRequest) returns (RevokeVisaResponse);
    
    // Renew visa
    rpc RenewVisa(RenewVisaRequest) returns (RenewVisaResponse);
    
    // Batch operations
    rpc CreateVisasBatch(CreateVisasBatchRequest) returns (CreateVisasBatchResponse);
    rpc VerifyVisasBatch(VerifyVisasBatchRequest) returns (VerifyVisasBatchResponse);
    
    // Reports
    rpc GetVisaStatistics(google.protobuf.Empty) returns (VisaStatisticsResponse);
    rpc GetExpiringVisas(GetExpiringVisasRequest) returns (GetExpiringVisasResponse);
}

// Enumerations
enum VisaType {
    VISA_TYPE_UNSPECIFIED = 0;
    MRV_TYPE_A = 1;  // 2-line MRZ
    MRV_TYPE_B = 2;  // 3-line MRZ
    E_VISA = 3;      // Digital Travel Authorization
    DTA = 4;         // Digital Travel Authorization (alias)
}

enum VisaCategory {
    VISA_CATEGORY_UNSPECIFIED = 0;
    B1 = 1;       // Business visitor
    B2 = 2;       // Tourist/pleasure
    B1_B2 = 3;    // Business/tourist combined
    C1 = 4;       // Transit
    C1_D = 5;     // Transit/crew
    D = 6;        // Crew member
    H1B = 7;      // Specialty occupation
    H2A = 8;      // Temporary agricultural worker
    H2B = 9;      // Temporary non-agricultural worker
    L1 = 10;      // Intracompany transferee
    F1 = 11;      // Academic student
    M1 = 12;      // Vocational student
    J1 = 13;      // Exchange visitor
    A1 = 14;      // Ambassador/diplomat
    A2 = 15;      // Other diplomatic
    G1 = 16;      // International organization representative
    OTHER = 17;   // Other categories
}

enum Gender {
    GENDER_UNSPECIFIED = 0;
    MALE = 1;
    FEMALE = 2;
    UNSPECIFIED_GENDER = 3;
}

enum VisaStatus {
    VISA_STATUS_UNSPECIFIED = 0;
    DRAFT = 1;
    ISSUED = 2;
    ACTIVE = 3;
    EXPIRED = 4;
    REVOKED = 5;
    SUSPENDED = 6;
}

enum SecurityModel {
    SECURITY_MODEL_UNSPECIFIED = 0;
    MRZ_ONLY = 1;        // MRZ with check digits only
    VDS_NC = 2;          // VDS-NC barcode with signatures
    CHIP_LDS = 3;        // RFID chip with LDS
    HYBRID = 4;          // Multiple security features
}

// Data structures
message PersonalData {
    string surname = 1;
    string given_names = 2;
    string nationality = 3;
    string date_of_birth = 4;  // ISO date format
    Gender gender = 5;
    string place_of_birth = 6;
}

message VisaDocumentData {
    string document_number = 1;
    string document_type = 2;
    string issuing_state = 3;
    VisaCategory visa_category = 4;
    VisaType visa_type = 5;
    string date_of_issue = 6;      // ISO date format
    string date_of_expiry = 7;     // ISO date format
    string valid_from = 8;         // ISO date format (optional)
    string valid_until = 9;        // ISO date format (optional)
    string place_of_issue = 10;
    string issuing_authority = 11;
    string number_of_entries = 12;
    int32 duration_of_stay = 13;
}

message MRZData {
    string type_a_line1 = 1;
    string type_a_line2 = 2;
    string type_b_line1 = 3;
    string type_b_line2 = 4;
    string type_b_line3 = 5;
    string check_digit_document = 6;
    string check_digit_dob = 7;
    string check_digit_expiry = 8;
    string check_digit_composite = 9;
}

message VDSNCData {
    map<string, string> header = 1;
    map<string, string> message = 2;
    string signature = 3;
    string barcode_data = 4;
    string barcode_format = 5;
    string issuer_certificate = 6;
    string signature_algorithm = 7;
    repeated string certificate_chain = 8;
}

message PolicyConstraints {
    repeated string allowed_countries = 1;
    repeated string restricted_countries = 2;
    repeated string purpose_restrictions = 3;
    bool employment_authorized = 4;
    bool study_authorized = 5;
    bool requires_online_check = 6;
    string verification_url = 7;
    string verification_api_key = 8;
}

message VerificationResult {
    bool is_valid = 1;
    google.protobuf.Timestamp verification_timestamp = 2;
    
    // MRZ verification
    bool mrz_valid = 3;
    bool check_digits_valid = 4;
    repeated string mrz_errors = 5;
    
    // VDS-NC verification
    bool vds_nc_present = 6;
    bool vds_nc_valid = 7;
    bool signature_valid = 8;
    bool field_consistency_valid = 9;
    repeated string vds_nc_errors = 10;
    
    // Policy verification
    bool policy_checks_passed = 11;
    bool validity_period_ok = 12;
    bool category_constraints_ok = 13;
    bool online_verification_ok = 14;
    repeated string policy_errors = 15;
    
    // Additional details
    repeated string warnings = 16;
    map<string, string> verification_details = 17;
}

message Visa {
    string visa_id = 1;
    string version = 2;
    PersonalData personal_data = 3;
    VisaDocumentData document_data = 4;
    SecurityModel security_model = 5;
    MRZData mrz_data = 6;
    VDSNCData vds_nc_data = 7;
    PolicyConstraints policy_constraints = 8;
    VisaStatus status = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
    string created_by = 12;
    VerificationResult last_verification = 13;
    repeated VerificationResult verification_history = 14;
    map<string, string> metadata = 15;
}

// Request/Response messages
message CreateVisaRequest {
    PersonalData personal_data = 1;
    VisaDocumentData document_data = 2;
    SecurityModel security_model = 3;
    PolicyConstraints policy_constraints = 4;
    map<string, string> metadata = 5;
    string created_by = 6;
}

message CreateVisaResponse {
    Visa visa = 1;
    string message = 2;
}

message IssueVisaRequest {
    string visa_id = 1;
    string issued_by = 2;
}

message IssueVisaResponse {
    Visa visa = 1;
    string message = 2;
}

message VerifyVisaRequest {
    string visa_id = 1;
    string mrz_data = 2;
    string barcode_data = 3;
    bool verify_signature = 4;
    bool check_policy = 5;
    bool online_verification = 6;
}

message VerifyVisaResponse {
    VerificationResult result = 1;
    string message = 2;
}

message GetVisaRequest {
    string visa_id = 1;
}

message GetVisaResponse {
    Visa visa = 1;
    string message = 2;
}

message SearchVisasRequest {
    string document_number = 1;
    string surname = 2;
    string nationality = 3;
    string issuing_state = 4;
    VisaCategory visa_category = 5;
    VisaStatus status = 6;
    string date_from = 7;
    string date_to = 8;
    int32 limit = 9;
    int32 offset = 10;
}

message SearchVisasResponse {
    repeated Visa visas = 1;
    int32 total_count = 2;
    int32 limit = 3;
    int32 offset = 4;
    bool has_more = 5;
    string message = 6;
}

message UpdateVisaStatusRequest {
    string visa_id = 1;
    VisaStatus new_status = 2;
    string reason = 3;
    string updated_by = 4;
}

message UpdateVisaStatusResponse {
    Visa visa = 1;
    string message = 2;
}

message RevokeVisaRequest {
    string visa_id = 1;
    string reason = 2;
    string revoked_by = 3;
}

message RevokeVisaResponse {
    Visa visa = 1;
    string message = 2;
}

message RenewVisaRequest {
    string visa_id = 1;
    string new_expiry_date = 2;  // ISO date format
}

message RenewVisaResponse {
    Visa visa = 1;
    string message = 2;
}

// Batch operations
message CreateVisasBatchRequest {
    repeated CreateVisaRequest requests = 1;
    string created_by = 2;
}

message CreateVisasBatchResponse {
    repeated CreateVisaResponse responses = 1;
    int32 success_count = 2;
    int32 error_count = 3;
    string message = 4;
}

message VerifyVisasBatchRequest {
    repeated VerifyVisaRequest requests = 1;
}

message VerifyVisasBatchResponse {
    repeated VerifyVisaResponse responses = 1;
    int32 success_count = 2;
    int32 error_count = 3;
    string message = 4;
}

// Reporting
message VisaStatisticsResponse {
    int32 total_visas = 1;
    map<string, int32> by_status = 2;
    map<string, int32> by_type = 3;
    map<string, int32> by_category = 4;
    map<string, int32> by_nationality = 5;
    int32 expiring_soon = 6;
    string message = 7;
}

message GetExpiringVisasRequest {
    int32 days_ahead = 1;
}

message GetExpiringVisasResponse {
    repeated Visa visas = 1;
    int32 count = 2;
    string message = 3;
}