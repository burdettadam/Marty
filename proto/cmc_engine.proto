syntax = "proto3";

package cmc;

import "common_services.proto";

service CMCEngine {
  // Create a new crew member certificate
  rpc CreateCMC (CreateCMCRequest) returns (CreateCMCResponse);
  
  // Retrieve a CMC by document number
  rpc GetCMC (GetCMCRequest) returns (CMCResponse);
  
  // Sign a CMC using Document Signer
  rpc SignCMC (SignCMCRequest) returns (SignCMCResponse);
  
  // Generate VDS-NC barcode for offline verification
  rpc GenerateVDSNCBarcode (GenerateVDSNCRequest) returns (GenerateVDSNCResponse);
  
  // Generate QR code for CMC access
  rpc GenerateCMCQRCode (GenerateQRCodeRequest) returns (GenerateQRCodeResponse);
  
  // Verify a CMC (for inspection system integration)
  rpc VerifyCMC (VerifyCMCRequest) returns (VerifyCMCResponse);
  
  // Check background verification status (Annex 9 compliance)
  rpc CheckBackgroundVerification (BackgroundCheckRequest) returns (BackgroundCheckResponse);
  
  // Update visa-free entry eligibility
  rpc UpdateVisaFreeStatus (VisaFreeStatusRequest) returns (VisaFreeStatusResponse);
}

// Request to create a new CMC
message CreateCMCRequest {
  string document_number = 1;
  string issuing_country = 2; // 3-letter country code
  string surname = 3; // Primary identifier per ICAO name rules
  string given_names = 4; // Secondary identifier per ICAO name rules
  string nationality = 5; // 3-letter nationality code
  string date_of_birth = 6; // ISO format: YYYY-MM-DD
  string gender = 7; // M, F, or X
  string date_of_expiry = 8; // ISO format: YYYY-MM-DD
  
  // Optional CMC-specific fields
  string employer = 9; // Employing airline/organization
  string crew_id = 10; // Crew member identification number
  
  // Security model selection
  CMCSecurityModel security_model = 11;
  
  // Face image for chip-based model (DG2)
  bytes face_image = 12;
  
  // Annex 9 compliance fields
  bool background_check_verified = 13;
  string electronic_record_id = 14;
  bool issuer_record_keeping = 15;
}

// Response after creating CMC
message CreateCMCResponse {
  bool success = 1;
  string cmc_id = 2; // Internal CMC identifier
  string document_number = 3;
  string td1_mrz = 4; // Generated TD-1 format MRZ
  string error_message = 5;
  string created_at = 6; // ISO format timestamp
}

// Request to get a CMC
message GetCMCRequest {
  oneof identifier {
    string cmc_id = 1;
    string document_number = 2;
  }
}

// CMC data response
message CMCResponse {
  bool success = 1;
  CMCCertificate cmc = 2;
  string error_message = 3;
}

// Complete CMC certificate data
message CMCCertificate {
  string cmc_id = 1;
  string document_number = 2;
  string issuing_country = 3;
  string surname = 4;
  string given_names = 5;
  string nationality = 6;
  string date_of_birth = 7;
  string gender = 8;
  string date_of_expiry = 9;
  string employer = 10;
  string crew_id = 11;
  
  CMCSecurityModel security_model = 12;
  bool background_check_verified = 13;
  bytes face_image = 14;
  
  string td1_mrz = 15; // TD-1 format MRZ string
  SignatureInfo signature_info = 16;
  CMCStatus status = 17;
  
  // Security model specific data
  oneof security_data {
    ChipLDSData chip_lds = 18;
    VDSNCBarcode vds_nc_barcode = 19;
  }
  
  // Annex 9 compliance
  string electronic_record_id = 20;
  bool issuer_record_keeping = 21;
  bool visa_free_entry_eligible = 22;
  
  string created_at = 23;
  string updated_at = 24;
}

// Security models for CMC
enum CMCSecurityModel {
  CHIP_LDS = 0; // Chip with minimal LDS (DG1, DG2)
  VDS_NC = 1;   // Visible Digital Seal (Non-Constrained)
}

// CMC status
enum CMCStatus {
  DRAFT = 0;
  ACTIVE = 1;
  EXPIRED = 2;
  REVOKED = 3;
  SUSPENDED = 4;
}

// Chip-based LDS data
message ChipLDSData {
  string security_object = 1; // SOD as base64
  repeated DataGroup data_groups = 2; // DG1, DG2, etc.
  bytes chip_content = 3; // Binary chip data
}

// Data group for LDS
message DataGroup {
  string type = 1; // DG1, DG2, etc.
  bytes data = 2;
}

// VDS-NC barcode data
message VDSNCBarcode {
  string header = 1;
  string message_type = 2; // "CMC"
  string issuing_country = 3;
  string signature_algorithm = 4;
  string certificate_reference = 5;
  string signature_creation_date = 6; // YYMMDD
  string signature_creation_time = 7; // HHMMSS (optional)
  string cmc_payload = 8; // JSON-encoded CMC data
  string signature = 9; // Digital signature
  string barcode_data = 10; // Encoded barcode string
}

// Request to sign a CMC
message SignCMCRequest {
  string cmc_id = 1;
  string signer_id = 2; // Document signer identifier
}

// Response after signing CMC
message SignCMCResponse {
  bool success = 1;
  SignatureInfo signature_info = 2;
  string error_message = 3;
}

// Request to generate VDS-NC barcode
message GenerateVDSNCRequest {
  string cmc_id = 1;
  string certificate_reference = 2;
  string signature_algorithm = 3; // Default: ES256
}

// Response with VDS-NC barcode
message GenerateVDSNCResponse {
  bool success = 1;
  VDSNCBarcode vds_nc_barcode = 2;
  string error_message = 3;
}

// Request to verify a CMC
message VerifyCMCRequest {
  oneof verification_data {
    string td1_mrz = 1; // TD-1 MRZ string
    string barcode_data = 2; // VDS-NC barcode data
    string cmc_id = 3; // Direct CMC ID lookup
  }
  bool check_revocation = 4; // Check revocation status
  bool validate_background_check = 5; // Validate Annex 9 compliance
}

// CMC verification response
message VerifyCMCResponse {
  bool success = 1;
  bool is_valid = 2;
  CMCCertificate cmc = 3;
  repeated VerificationResult verification_results = 4;
  string error_message = 5;
}

// Individual verification result
message VerificationResult {
  string check_name = 1; // e.g., "MRZ Check Digits", "SOD Signature", "VDS-NC Signature"
  bool passed = 2;
  string details = 3;
}

// Background check request (Annex 9)
message BackgroundCheckRequest {
  string cmc_id = 1;
  string check_authority = 2; // Authority performing background check
  string check_reference = 3; // Reference number for the check
}

// Background check response
message BackgroundCheckResponse {
  bool success = 1;
  bool check_passed = 2;
  string check_date = 3; // ISO format
  string check_authority = 4;
  string check_reference = 5;
  string error_message = 6;
}

// Visa-free status update request
message VisaFreeStatusRequest {
  string cmc_id = 1;
  bool visa_free_eligible = 2;
  string authority = 3; // Authority granting/revoking visa-free status
  string reason = 4; // Reason for status change
}

// Visa-free status update response
message VisaFreeStatusResponse {
  bool success = 1;
  bool visa_free_eligible = 2;
  string updated_at = 3; // ISO format
  string error_message = 4;
}

// Signature information
message SignatureInfo {
  string signature_date = 1; // ISO format
  string signer_id = 2;
  bytes signature = 3;
  string algorithm = 4; // Signature algorithm used
  bool is_valid = 5;
}