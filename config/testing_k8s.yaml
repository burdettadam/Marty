# Testing environment configuration for Kubernetes-based testing

# Kubernetes cluster configuration
cluster_name: marty-test
namespace: marty-test
cleanup_after_tests: false  # Set to true for CI environments

# Test modes and their service requirements
test_modes:
  unit:
    description: "Unit tests with no service dependencies"
    services_required: []
    parallel_execution: true
    
  mock:
    description: "Tests with mocked services"
    services_required: []
    parallel_execution: true
    
  integration:
    description: "Integration tests with core services"
    services_required: ["postgres", "trust-anchor", "csca-service", "document-signer"]
    parallel_execution: false
    
  e2e:
    description: "End-to-end tests with full service stack"
    services_required: 
      - postgres
      - trust-anchor
      - csca-service
      - document-signer
      - inspection-system
      - passport-engine
      - mdl-engine
      - mdoc-engine
      - dtc-engine
      - credential-ledger
      - ui-app
    parallel_execution: false

# Service configurations for Kubernetes deployment
services:
  postgres:
    startup_delay: 30
    dependencies: []
    ready_replicas: 1
    port: 5432
    health_check_path: "/"  # Postgres doesn't have HTTP health endpoint
    
  trust-anchor:
    startup_delay: 45
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 9080
    health_check_path: "/health"
    
  csca-service:
    startup_delay: 30
    dependencies: ["postgres", "trust-anchor"]
    ready_replicas: 1
    port: 8081
    health_check_path: "/health"
    configuration:
      signing_algorithm: rsa2048
      signing_key_id: document-signer-default
      
  document-signer:
    startup_delay: 30
    dependencies: ["postgres", "trust-anchor"]
    ready_replicas: 1
    port: 8082
    health_check_path: "/health"
    configuration:
      signing_algorithm: rsa2048
      signing_key_id: document-signer-default
      sd_jwt:
        issuer: "https://issuer.test.marty"
        signing_key_id: document-signer-sdjwt
        signing_algorithm: ES256
        vault_signing_algorithm: ecdsa-p256
        certificate_id: document-signer-default-dsc
        offer_ttl_seconds: 600
        token_ttl_seconds: 600
        credential_ttl_seconds: 86400
        default_credential_type: "eu.europa.ec.eudiw.pid"
        default_audience: "https://verifier.test.marty"
        storage_prefix: "sd-jwt"
        
  inspection-system:
    startup_delay: 30
    dependencies: ["postgres", "csca-service"]
    ready_replicas: 1
    port: 8083
    health_check_path: "/health"
    
  passport-engine:
    startup_delay: 30
    dependencies: ["postgres", "document-signer"]
    ready_replicas: 1
    port: 8084
    health_check_path: "/health"
    configuration:
      signing_algorithm: rsa2048
      signing_key_id: document-signer-default
      
  mdl-engine:
    startup_delay: 30
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 8085
    health_check_path: "/health"
    
  mdoc-engine:
    startup_delay: 30
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 8086
    health_check_path: "/health"
    
  dtc-engine:
    startup_delay: 30
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 8087
    health_check_path: "/health"
    configuration:
      signing_algorithm: rsa2048
      signing_key_id: document-signer-default
      
  credential-ledger:
    startup_delay: 30
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 8089
    health_check_path: "/health"
    
  ui-app:
    startup_delay: 30
    dependencies: ["passport-engine", "inspection-system"]
    ready_replicas: 1
    port: 9090
    health_check_path: "/health"

# Logging configuration
logging:
  level: DEBUG
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  file: logs/test.log

# Database configuration (for Kubernetes environments)
database:
  url: "${MARTY_DATABASE_URL:-postgresql+asyncpg://postgres:postgres@postgres.marty-test.svc.cluster.local:5432/marty_test}"

# Kubernetes-specific settings
kubernetes:
  image_pull_policy: "IfNotPresent"
  resource_limits:
    memory: "512Mi"
    cpu: "500m"
  resource_requests:
    memory: "256Mi"
    cpu: "100m"
  service_account: "marty-test"

# Test orchestration settings
orchestration:
  max_startup_time: 300  # Maximum time to wait for all services to start (K8s needs more time)
  health_check_timeout: 60  # Timeout for individual service health checks
  service_startup_delay: 10  # Default delay between service starts
  cleanup_timeout: 60  # Time to wait for services to stop during cleanup
  port_forward_timeout: 30  # Time to wait for port forwards to establish

# Feature flags for testing
features:
  enable_debug_endpoints: true
  enable_performance_tracking: false
  enable_detailed_logging: true
  enable_k8s_monitoring: true
  enable_service_mesh: false