# Testing environment configuration for Kubernetes
# SECURITY ENFORCED - NO EXCEPTIONS

# Security configuration (ENFORCED)
security:
  grpc_tls:
    enabled: true  # ALWAYS enabled
    mtls: true
    require_client_auth: true
    server_cert: "/etc/tls/server/tls.crt"
    server_key: "/etc/tls/server/tls.key"
    client_ca: "/etc/tls/ca/ca.crt"
    client_cert: "/etc/tls/client/tls.crt"
    client_key: "/etc/tls/client/tls.key"
  
  auth:
    required: true  # ALWAYS required
    jwt:
      enabled: true
      algorithm: "HS256"
      secret: "test_jwt_secret_for_testing_environment_only"
    client_cert:
      enabled: true
  
  authz:
    enabled: true  # ALWAYS enabled
    default_action: "deny"  # ALWAYS deny

# Kubernetes cluster configuration
cluster_name: marty-test
namespace: marty-test
cleanup_after_tests: false  # Set to true for CI environments

# Test modes and required services
test_modes:
  unit:
    services_required: []
  integration:
    services_required:
      - postgres
      - trust-anchor
      - csca-service
      - document-signer
      - passport-engine
  e2e:
    services_required:
      - postgres
      - trust-anchor
      - csca-service
      - document-signer
      - inspection-system
      - passport-engine
      - mdl-engine
      - mdoc-engine
      - dtc-engine
      - credential-ledger
      - ui-app

# Service configurations for Kubernetes deployment
services:
  postgres:
    startup_delay: 30
    dependencies: []
    ready_replicas: 1
  trust-anchor:
    startup_delay: 45
    dependencies: ["postgres"]
    ready_replicas: 1
    port: 9080
  csca-service:
    startup_delay: 30
    dependencies: ["postgres", "trust-anchor"]
    ready_replicas: 1
    port: 8081
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default
  document_signer:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default
    sd_jwt:
      issuer: "https://issuer.test.marty"
      signing_key_id: document-signer-sdjwt
      signing_algorithm: ES256
      vault_signing_algorithm: ecdsa-p256
      certificate_id: document-signer-default-dsc
      offer_ttl_seconds: 600
      token_ttl_seconds: 600
      credential_ttl_seconds: 86400
      default_credential_type: "eu.europa.ec.eudiw.pid"
      default_audience: "https://verifier.test.marty"
      storage_prefix: "sd-jwt"
  passport_engine:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default
  dtc_engine:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default

# Logging
logging:
  level: DEBUG
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  file: logs/test.log

# Database
database:
  url: "${MARTY_DATABASE_URL:-postgresql+asyncpg://test_user:test_password@localhost:5432/marty_test}"
  host: localhost
  port: 5432
  user: test_user
  password: test_password
  name: marty_test

# Security
security:
  key_directory: 'tests/fixtures/keys'
  key_rotation_days: 365
  certificate_validity_days: 365
  grpc_tls:
    enabled: false
    server_cert: ""
    server_key: ""
    client_ca: ""
    client_cert: ""
    client_key: ""
    require_client_auth: false

# Object storage
object_storage:
  bucket: "marty-test"
  access_key: "localtest"
  secret_key: "localtest"
  region: "us-east-1"
  endpoint_url: "${MARTY_OBJECT_STORE_ENDPOINT:-http://localhost:9000}"
  secure: false
  path_style_access: true

# Key vault
key_vault:
  provider: "${MARTY_KEY_VAULT_PROVIDER:-file}"
  file_path: 'tests/fixtures/keys'
  hsm_config_path: "${MARTY_HSM_CONFIG:-}"

# Event bus
event_bus:
  enabled: false
  brokers: "localhost:9092"
  client_id: "marty-test"
  topic_prefix: "test."

# Feature flags
features:
  enable_debug_endpoints: true
  enable_performance_tracking: false
  enable_detailed_logging: true

# Test orchestration settings
orchestration:
  max_startup_time: 60  # Maximum time to wait for all services to start
  health_check_timeout: 30  # Timeout for individual service health checks
  service_startup_delay: 5  # Default delay between service starts
  cleanup_timeout: 30  # Time to wait for services to stop during cleanup

# Service-specific configurations for orchestration
services:
  postgres:
    startup_delay: 15  # Postgres needs more time to initialize
    health_check_retries: 10
    required_for: ["integration", "e2e"]
  
  trust-anchor:
    startup_delay: 5
    dependencies: ["postgres"]
    required_for: ["integration", "e2e"]
  
  csca-service:
    startup_delay: 5
    dependencies: ["postgres", "trust-anchor"]
    required_for: ["integration", "e2e"]
  
  document-signer:
    startup_delay: 5
    dependencies: ["postgres", "trust-anchor"]
    required_for: ["e2e"]
  
  inspection-system:
    startup_delay: 5
    dependencies: ["postgres", "csca-service"]
    required_for: ["e2e"]
  
  passport-engine:
    startup_delay: 5
    dependencies: ["postgres", "document-signer"]
    required_for: ["e2e"]
  
  mdl-engine:
    startup_delay: 5
    dependencies: ["postgres"]
    required_for: ["e2e"]
  
  mdoc-engine:
    startup_delay: 5
    dependencies: ["postgres"]
    required_for: ["e2e"]
  
  dtc-engine:
    startup_delay: 5
    dependencies: ["postgres"]
    required_for: ["e2e"]

# Test environment modes
test_modes:
  unit:
    description: "Unit tests with no service dependencies"
    services_required: []
    parallel_execution: true
    
  mock:
    description: "Tests with mocked services"
    services_required: []
    parallel_execution: true
    
  integration:
    description: "Integration tests with core services"
    services_required: ["postgres", "trust-anchor", "csca-service"]
    parallel_execution: false
    
  e2e:
    description: "End-to-end tests with full service stack"
    services_required: ["postgres", "zookeeper", "kafka", "trust-anchor", "csca-service", "document-signer", 
                       "inspection-system", "passport-engine", "mdl-engine", "mdoc-engine", "dtc-engine", "credential-ledger"]
    parallel_execution: false

# Test isolation settings
isolation:
  cleanup_between_tests: true
  reset_databases: true
  clean_temp_files: true
  isolation_level: "test_class"  # Options: test_function, test_class, test_module

# Docker settings
docker:
  compose_file: "docker/docker-compose.yml"
  network: "marty-network"
  build_timeout: 300
  startup_timeout: 120
