# Credential Ledger Service Configuration
service_name: "credential-ledger"
environment: "${ENVIRONMENT:-development}"

# Database configuration
database:
  default:
    host: "${CREDENTIAL_LEDGER_DB_HOST:-localhost}"
    port: ${CREDENTIAL_LEDGER_DB_PORT:-5432}
    name: "${CREDENTIAL_LEDGER_DB_NAME:-marty_ledger}"
    user: "${CREDENTIAL_LEDGER_DB_USER:-marty_user}"
    password: "${CREDENTIAL_LEDGER_DB_PASSWORD:-marty_password}"
    pool_size: ${CREDENTIAL_LEDGER_DB_POOL_SIZE:-20}
    max_overflow: ${CREDENTIAL_LEDGER_DB_MAX_OVERFLOW:-30}

# Credential Ledger specific configuration
credential_ledger:
  # Processing configuration
  max_concurrent_events: ${CREDENTIAL_LEDGER_MAX_CONCURRENT:-50}
  event_processing_timeout: ${CREDENTIAL_LEDGER_TIMEOUT:-30}
  batch_size: ${CREDENTIAL_LEDGER_BATCH_SIZE:-100}
  
  # Retention policies
  event_retention_days: ${CREDENTIAL_LEDGER_EVENT_RETENTION:-365}
  ledger_retention_days: ${CREDENTIAL_LEDGER_LEDGER_RETENTION:-2555}  # 7 years
  
  # Event processing configuration
  event_ordering:
    enabled: ${CREDENTIAL_LEDGER_ORDERING:-true}
    max_out_of_order_delay: ${CREDENTIAL_LEDGER_MAX_DELAY:-300}  # 5 minutes
    
  # Deduplication settings
  deduplication:
    enabled: ${CREDENTIAL_LEDGER_DEDUP:-true}
    window_seconds: ${CREDENTIAL_LEDGER_DEDUP_WINDOW:-60}
    
  # Audit settings
  audit:
    detailed_logging: ${CREDENTIAL_LEDGER_DETAILED_AUDIT:-true}
    sensitive_data_masking: ${CREDENTIAL_LEDGER_MASK_SENSITIVE:-true}

# Event bus configuration
event_bus:
  provider: "${EVENT_BUS_PROVIDER:-kafka}"
  connection_string: "${KAFKA_BOOTSTRAP_SERVERS:-localhost:9092}"
  consumer_group: "${CREDENTIAL_LEDGER_CONSUMER_GROUP:-credential-ledger-group}"
  
  # Consumer configuration
  consumer:
    auto_offset_reset: "${KAFKA_AUTO_OFFSET_RESET:-earliest}"
    enable_auto_commit: ${KAFKA_AUTO_COMMIT:-true}
    max_poll_records: ${KAFKA_MAX_POLL_RECORDS:-500}
    session_timeout_ms: ${KAFKA_SESSION_TIMEOUT:-30000}
    heartbeat_interval_ms: ${KAFKA_HEARTBEAT_INTERVAL:-3000}
    
  # Topics to monitor
  topics:
    certificate_issued: "certificate.issued"
    certificate_renewed: "certificate.renewed"
    certificate_revoked: "certificate.revoked"
    passport_issued: "passport.issued"
    dtc_issued: "dtc.issued"
    dtc_signed: "dtc.signed"
    dtc_revoked: "dtc.revoked"
    mdl_created: "mdl.created"
    mdl_signed: "mdl.signed"
    mdl_transfer_requested: "mdl.transfer_requested"
    credential_issued: "credential.issued"
    pkd_sync_completed: "pkd.sync.completed"
    trust_updated: "trust.updated"

# gRPC server configuration (for health checks and admin operations)
grpc:
  server:
    host: "${CREDENTIAL_LEDGER_GRPC_HOST:-0.0.0.0}"
    port: ${CREDENTIAL_LEDGER_GRPC_PORT:-50089}
    max_workers: ${CREDENTIAL_LEDGER_GRPC_MAX_WORKERS:-10}
    reflection_enabled: ${CREDENTIAL_LEDGER_GRPC_REFLECTION:-true}

# Service discovery configuration
service_discovery:
  hosts:
    credential_ledger: "${CREDENTIAL_LEDGER_HOST:-credential-ledger}"
    kafka: "${KAFKA_HOST:-kafka}"
    database: "${DATABASE_HOST:-postgres}"
    
  ports:
    credential_ledger: ${CREDENTIAL_LEDGER_PORT:-50089}
    kafka: ${KAFKA_PORT:-9092}
    database: ${DATABASE_PORT:-5432}

# Object storage configuration (for large event payloads)
object_storage:
  enabled: ${CREDENTIAL_LEDGER_STORAGE_ENABLED:-false}
  provider: "${OBJECT_STORAGE_PROVIDER:-minio}"
  endpoint: "${OBJECT_STORAGE_ENDPOINT:-localhost:9000}"
  access_key: "${OBJECT_STORAGE_ACCESS_KEY:-minioadmin}"
  secret_key: "${OBJECT_STORAGE_SECRET_KEY:-minioadmin}"
  bucket_name: "${CREDENTIAL_LEDGER_BUCKET:-ledger-storage}"
  secure: ${OBJECT_STORAGE_SECURE:-false}
  region: "${OBJECT_STORAGE_REGION:-us-east-1}"

# CRITICAL: Unified observability configuration
monitoring:
  metrics:
    enabled: true
    port: 8080
    path: "/metrics"
    business_metrics:
      # Event processing metrics
      event_processing:
        enabled: true
        labels: ["topic", "event_type", "result", "source"]
        description: "Event processing metrics by topic and result"
        
      # Ledger operations metrics
      ledger_operations:
        enabled: true
        labels: ["operation", "credential_type", "result", "status"]
        description: "Credential ledger operation metrics"
        
      # Event throughput metrics
      event_throughput:
        enabled: true
        labels: ["topic", "partition", "consumer_group"]
        description: "Event processing throughput metrics"
        
      # Data consistency metrics
      consistency_checks:
        enabled: true
        labels: ["check_type", "result", "severity"]
        description: "Data consistency validation metrics"
        
      # Audit trail metrics
      audit_operations:
        enabled: true
        labels: ["operation", "credential_id", "user_context"]
        description: "Audit trail operation metrics"
        
      # Storage metrics
      storage_operations:
        enabled: true
        labels: ["operation", "storage_type", "data_type", "size_category"]
        description: "Storage operation metrics for large events"
        
      # Deduplication metrics
      deduplication:
        enabled: true
        labels: ["topic", "duplicate_type", "action"]
        description: "Event deduplication metrics"
        
      # Retention policy metrics
      retention_operations:
        enabled: true
        labels: ["policy_type", "operation", "records_affected"]
        description: "Data retention policy execution metrics"
        
  tracing:
    enabled: true
    service_name: "credential-ledger"
    jaeger_endpoint: "${JAEGER_ENDPOINT:-http://jaeger:14268/api/traces}"
    correlation_id:
      enabled: true
      header: "x-correlation-id"
    sampling:
      type: "probabilistic"
      rate: ${CREDENTIAL_LEDGER_TRACE_SAMPLING:-0.2}  # 20% sampling for event processing
      
  health_checks:
    enabled: true
    endpoint: "/health"
    checks:
      database:
        interval: 30
        timeout: 10
      kafka_connectivity:
        interval: 45
        timeout: 15
      event_processing:
        interval: 60
        timeout: 20
      storage_connectivity:
        interval: 120
        timeout: 30
        
  logging:
    structured: true
    correlation_aware: true
    level: "${LOG_LEVEL:-INFO}"
    format: "json"
    fields:
      service: "credential-ledger"
      component: "event_processor"

# Business metrics configuration
business_metrics:
  # Event processing tracking
  event_processing:
    track_processing_time: true
    track_event_volume: true
    track_error_rates: true
    track_lag_metrics: true
    
  # Ledger integrity tracking
  ledger_integrity:
    consistency_checking: true
    duplicate_detection: true
    ordering_validation: true
    completeness_verification: true
    
  # Performance monitoring
  performance:
    consumer_lag_monitoring: true
    throughput_tracking: true
    memory_usage_tracking: true
    connection_pool_monitoring: true
    
  # Audit compliance
  audit:
    access_logging: true
    data_lineage_tracking: true
    retention_compliance: true
    privacy_masking: true
    
  # Integration health
  integration:
    kafka_health_monitoring: true
    database_performance_tracking: true
    storage_availability_monitoring: true

# Environment-specific overrides
development:
  credential_ledger:
    max_concurrent_events: 10
    event_processing_timeout: 60
    detailed_logging: true
  monitoring:
    logging:
      level: "DEBUG"
    tracing:
      sampling:
        rate: 1.0  # 100% sampling in development
        
testing:
  database:
    default:
      name: "marty_ledger_test"
  credential_ledger:
    batch_size: 10
    event_retention_days: 7
    ledger_retention_days: 30
  event_bus:
    consumer_group: "credential-ledger-test-group"
  monitoring:
    tracing:
      enabled: false
    logging:
      level: "INFO"
      
production:
  credential_ledger:
    max_concurrent_events: 100
    event_processing_timeout: 15
    batch_size: 1000
  monitoring:
    tracing:
      jaeger_endpoint: "https://jaeger.marty.example.com/api/traces"
      sampling:
        rate: 0.05  # 5% sampling in production
    logging:
      level: "WARN"
  event_bus:
    consumer:
      max_poll_records: 1000
      session_timeout_ms: 45000