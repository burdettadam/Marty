# Production environment configuration
# MAXIMUM SECURITY ENFORCED - NO EXCEPTIONS

# Production security (MAXIMUM ENFORCEMENT)
security:
  grpc_tls:
    enabled: true  # ALWAYS enabled in production
    mtls: true  # ALWAYS enabled for production
    require_client_auth: true  # ALWAYS required
    server_cert: "/etc/tls/server/tls.crt"
    server_key: "/etc/tls/server/tls.key"
    client_ca: "/etc/tls/ca/ca.crt"
    client_cert: "/etc/tls/client/tls.crt"
    client_key: "/etc/tls/client/tls.key"

  auth:
    required: true  # ALWAYS required in production
    jwt:
      enabled: true
      algorithm: "RS256"  # Stronger algorithm for production
      public_key: "/etc/jwt/public.key"
    client_cert:
      enabled: true  # ALWAYS enabled

  authz:
    enabled: true  # ALWAYS enabled
    default_action: "deny"  # ALWAYS deny
    strict_mode: true
    audit_all_requests: true

# Production environment configuration
# Uses YAML anchors to inherit common patterns and reduce duplication

# Production-specific hosts (service names for container networking)
prod_hosts: &prod_hosts
  csca_service: csca-service
  document_signer: document-signer
  passport_engine: passport-engine
  inspection_system: inspection-system
  trust_anchor: trust-anchor
  mdl_engine: mdl-engine
  mdoc_engine: mdoc-engine
  dtc_engine: dtc-engine
  credential_ledger: credential-ledger
  pkd_service: pkd-service

# Service ports (inherited from base patterns)
ports: &default_ports
  csca_service: 8081
  document_signer: 8082
  passport_engine: 8084
  inspection_system: 8083
  trust_anchor: 8080
  mdl_engine: 8085
  mdoc_engine: 8086
  dtc_engine: 8087
  credential_ledger: 8088
  pkd_service: 8089

# Service hosts
hosts: *prod_hosts

# Common service configuration with production overrides
services:
  document_signer:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default
    sd_jwt:
      issuer: "${SD_JWT_ISSUER:-https://issuer.prod.marty}"
      signing_key_id: document-signer-sdjwt
      signing_algorithm: ES256
      vault_signing_algorithm: ecdsa-p256
      certificate_id: document-signer-default-dsc
      offer_ttl_seconds: 600
      token_ttl_seconds: 600

  trust_anchor:
    certificate_store_path: "/app/data/trust"
    update_interval_hours: 24
    validation_timeout_seconds: 30

  inspection_system:
    max_concurrent_inspections: 20
    inspection_timeout_seconds: 300
    enable_biometric_verification: true

# Production logging (standard level)
logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - console
    - file

# Production security (enhanced)
security:
  tls_enabled: true
  require_client_cert: true
  cert_validation_timeout: 30

# Production database (higher capacity)
database:
  pool_size: 20
  max_overflow: 40
  pool_timeout: 30
  pool_recycle: 3600

# Monitoring configuration
monitoring:
  metrics_enabled: true
  health_check_enabled: true
  prometheus_port: 9090
      credential_ttl_seconds: 604800
      default_credential_type: "eu.europa.ec.eudiw.pid"
      default_audience: "${SD_JWT_DEFAULT_AUDIENCE:-https://verifier.prod.marty}"
      storage_prefix: "sd-jwt"
  passport_engine:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default
  dtc_engine:
    signing_algorithm: rsa2048
    signing_key_id: document-signer-default

# Logging
logging:
  level: INFO
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  file: logs/production.log

# Database - per service databases for production
database:
  document_signer:
    url: "${DOCUMENT_SIGNER_DATABASE_URL:-postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db:5432/marty_document_signer_production}"
    host: db
    port: 5432
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"
    name: marty_document_signer_production

  csca:
    url: "${CSCA_DATABASE_URL:-postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db:5432/marty_csca_production}"
    host: db
    port: 5432
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"
    name: marty_csca_production

  pkd_service:
    url: "${PKD_SERVICE_DATABASE_URL:-postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db:5432/marty_pkd_production}"
    host: db
    port: 5432
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"
    name: marty_pkd_production

  passport_engine:
    url: "${PASSPORT_ENGINE_DATABASE_URL:-postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db:5432/marty_passport_engine_production}"
    host: db
    port: 5432
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"
    name: marty_passport_engine_production

# Security
security:
  key_directory: '/secrets/keys'
  key_rotation_days: 30
  certificate_validity_days: 365
  hsm_enabled: true
  hsm_config: '/secrets/hsm/config.json'
  grpc_tls:
    enabled: true
    server_cert: "/secrets/tls/server.crt"
    server_key: "/secrets/tls/server.key"
    client_ca: "/secrets/tls/ca.crt"
    client_cert: ""
    client_key: ""
    require_client_auth: true

# Object storage
object_storage:
  bucket: "${MARTY_OBJECT_STORE_BUCKET}"
  access_key: "${MARTY_OBJECT_STORE_ACCESS_KEY}"
  secret_key: "${MARTY_OBJECT_STORE_SECRET_KEY}"
  region: "${MARTY_OBJECT_STORE_REGION:-us-east-1}"
  endpoint_url: "${MARTY_OBJECT_STORE_ENDPOINT:-}"
  secure: true
  path_style_access: false

# Key vault
key_vault:
  provider: "${MARTY_KEY_VAULT_PROVIDER:-hsm}"
  file_path: '/tmp/keys'
  hsm_config_path: '/secrets/hsm/config.json'

# Event bus
event_bus:
  enabled: true
  brokers: "${KAFKA_BROKERS}"
  client_id: "${HOSTNAME:-marty-service}"
  topic_prefix: "prod."
  security_protocol: "${KAFKA_SECURITY_PROTOCOL:-SSL}"
  ssl_cafile: "${KAFKA_SSL_CAFILE:-}"
  ssl_certfile: "${KAFKA_SSL_CERTFILE:-}"
  ssl_keyfile: "${KAFKA_SSL_KEYFILE:-}"

# Feature flags
features:
  enable_debug_endpoints: false
  enable_performance_tracking: true
  enable_detailed_logging: false
