receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s

  resource:
    attributes:
      - key: service.namespace
        value: marty
        action: insert
      - key: deployment.environment
        value: development
        action: insert

  # Filter out noisy spans if needed
  filter:
    spans:
      exclude:
        match_type: strict
        attributes:
          - key: grpc.method
            value: /grpc.health.v1.Health/Check

exporters:
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Optional: Export metrics to Prometheus
  prometheus:
    endpoint: "0.0.0.0:8889"
    metric_expiration: 180m
    enable_open_metrics: true

  # Debug exporter for troubleshooting
  debug:
    verbosity: normal

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch, filter]
      exporters: [jaeger, debug]

    metrics:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus]

  telemetry:
    logs:
      level: info
    metrics:
      address: 0.0.0.0:8888
