{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "marty-monitoring.fullname" . }}-prometheus-config
  labels:
    {{- include "marty-monitoring.prometheus.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.monitoringConfig.metricsCollection.interval }}
      scrape_timeout: {{ .Values.monitoringConfig.metricsCollection.timeout }}
      evaluation_interval: 15s
      external_labels:
        cluster: {{ .Values.global.cluster | default "marty-cluster" }}
        environment: {{ include "marty-monitoring.environment" . }}
        region: {{ .Values.global.region | default "us-east-1" }}

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - {{ include "marty-monitoring.fullname" . }}-alertmanager:{{ .Values.alertmanager.service.port }}

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scrape_interval: 15s

      # Alertmanager monitoring
      - job_name: 'alertmanager'
        static_configs:
          - targets: ['{{ include "marty-monitoring.fullname" . }}-alertmanager:{{ .Values.alertmanager.service.port }}']
        metrics_path: /metrics
        scrape_interval: 15s

      # Grafana monitoring
      - job_name: 'grafana'
        static_configs:
          - targets: ['{{ include "marty-monitoring.fullname" . }}-grafana:{{ .Values.grafana.service.port }}']
        metrics_path: /metrics
        scrape_interval: 30s

      {{- range .Values.prometheus.scrapeConfigs }}
      - job_name: {{ .job_name | quote }}
        {{- if .static_configs }}
        static_configs:
          {{- range .static_configs }}
          - targets:
            {{- range .targets }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .kubernetes_sd_configs }}
        kubernetes_sd_configs:
          {{- toYaml .kubernetes_sd_configs | nindent 10 }}
        {{- end }}
        {{- if .metrics_path }}
        metrics_path: {{ .metrics_path }}
        {{- end }}
        {{- if .scrape_interval }}
        scrape_interval: {{ .scrape_interval }}
        {{- end }}
        {{- if .relabel_configs }}
        relabel_configs:
          {{- toYaml .relabel_configs | nindent 10 }}
        {{- end }}
      {{- end }}

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes node exporter
      - job_name: 'kubernetes-nodes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # Kubernetes service endpoints
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

      # Kubernetes ingress
      - job_name: 'kubernetes-ingresses'
        kubernetes_sd_configs:
          - role: ingress
        relabel_configs:
          - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_ingress_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_ingress_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_ingress_name]
            action: replace
            target_label: kubernetes_name
{{- end }}
