{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "marty-monitoring.fullname" . }}-prometheus
  labels:
    {{- include "marty-monitoring.prometheus.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "marty-monitoring.prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "marty-monitoring.prometheus.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/prometheus-config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "marty-monitoring.prometheus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.prometheus.server.securityContext | nindent 8 }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.server.image.repository }}:{{ .Values.prometheus.server.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time={{ .Values.prometheus.server.retention }}'
            - '--storage.tsdb.retention.size={{ .Values.prometheus.server.retentionSize }}'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--alertmanager.url={{ include "marty-monitoring.alertmanager.url" . }}'
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 5
          resources:
            {{- include "marty-monitoring.resources" (dict "Values" .Values "component" "prometheus.server") | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: rules
              mountPath: /etc/prometheus/rules
            - name: storage
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: {{ include "marty-monitoring.fullname" . }}-prometheus-config
        - name: rules
          configMap:
            name: {{ include "marty-monitoring.fullname" . }}-prometheus-rules
        - name: storage
          {{- if .Values.prometheus.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "marty-monitoring.fullname" . }}-prometheus-storage
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.prometheus.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheus.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheus.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
