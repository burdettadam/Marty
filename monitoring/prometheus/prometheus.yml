global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Marty microservices - use Kubernetes service discovery with annotations
  - job_name: 'marty-microservices'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ['marty']
    relabel_configs:
      # Only scrape services with prometheus.io/scrape: "true" annotation
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Use the service name as the job label
      - source_labels: [__meta_kubernetes_service_name]
        target_label: job
        replacement: '${1}'
      # Use the prometheus.io/path annotation for the metrics path
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use the prometheus.io/port annotation for the port
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      # Add service and namespace labels
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_service_name
    scrape_interval: 15s
    metrics_path: /metrics

  # Legacy static configs for services without annotations (kept for backwards compatibility)
  - job_name: 'csca-service-static'
    static_configs:
      - targets: ['csca-service.marty.svc.cluster.local:9081']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'document-signer-static'
    static_configs:
      - targets: ['document-signer.marty.svc.cluster.local:9082']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'inspection-system-static'
    static_configs:
      - targets: ['inspection-system.marty.svc.cluster.local:9083']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'mdl-engine-static'
    static_configs:
      - targets: ['mdl-engine.marty.svc.cluster.local:9085']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'mdoc-engine-static'
    static_configs:
      - targets: ['mdoc-engine.marty.svc.cluster.local:9086']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'passport-engine-static'
    static_configs:
      - targets: ['passport-engine.marty.svc.cluster.local:9084']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'pkd-service-static'
    static_configs:
      - targets: ['pkd-service.marty.svc.cluster.local:10090']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'trust-anchor-static'
    static_configs:
      - targets: ['trust-anchor.marty.svc.cluster.local:10080']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # Infrastructure monitoring
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
