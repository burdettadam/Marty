# Pre-commit hooks for code quality and consistency
repos:
  # Local hooks
  - repo: local
    hooks:
      - id: compile-protos
        name: Compile Protocol Buffers
        entry: python -m src.compile_protos
        language: system
        files: \.proto$
        pass_filenames: false
        description: "Compiles .proto files to Python modules"

  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
        types: [text]
      - id: end-of-file-fixer
        types: [text]
      - id: check-yaml
        types: [yaml]
      - id: check-json
        types: [json]
      - id: check-toml
        types: [toml]
      - id: check-merge-conflict
        types: [text]
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-docstring-first
        types: [python]
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']
        types: [text]

  # Python code formatting with black
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=100]
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$
          )

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$
          )

  # Linting with ruff (faster alternative to flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.8
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$
          )
      - id: ruff-format
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$
          )

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        args: [--ignore-missing-imports, --no-strict-optional]
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$|
              ^tests/
          )

  # Security scanning with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        types: [python]
        exclude: |
          (?x)(
              ^tests/|
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$
          )

  # Code complexity analysis with xenon
  - repo: https://github.com/rubik/xenon
    rev: v0.9.1
    hooks:
      - id: xenon
        args: [--max-average=B, --max-modules=B, --max-absolute=B, src/]
        types: [python]
        exclude: |
          (?x)(
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$|
              ^tests/
          )

  # Documentation style checking
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        types: [python]
        exclude: |
          (?x)(
              ^tests/|
              ^src/proto/.*_pb2\.py$|
              ^src/proto/.*_pb2_grpc\.py$|
              ^migrations/
          )

  # Check for security vulnerabilities in dependencies
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check

# Configuration for pre-commit ci
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, xenon, python-safety-dependencies-check]  # Skip slow hooks in CI
  submodules: false