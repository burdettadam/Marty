apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "marty-service.fullname" . }}
  labels:
    {{- include "marty-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "marty-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "marty-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.service.healthPort }}
              protocol: TCP
          env:
            - name: MARTY_ENV
              value: "testing" # Use testing config inside container
            - name: MARTY_DATABASE_URL
              value: "postgresql+asyncpg://marty:marty@postgres.marty.svc.cluster.local:5432/marty"
            - name: DATABASE_HOST
              value: {{ .Values.config.database.host | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.config.database.port | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.config.database.name | quote }}
            - name: DATABASE_USER
              value: {{ .Values.config.database.user | quote }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "marty-service.fullname" . }}-db-secret
                  key: password
            - name: KAFKA_BROKERS
              value: {{ .Values.config.kafka.brokers | quote }}
            - name: KAFKA_TOPIC_PREFIX
              value: {{ .Values.config.kafka.topicPrefix | quote }}
            - name: REDIS_HOST
              value: {{ .Values.config.redis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.config.redis.port | quote }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: health
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: health
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}