{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "marty-service.fullname" . }}-migration
  labels:
    {{- include "marty-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.migration.job.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.migration.job.activeDeadlineSeconds }}
  ttlSecondsAfterFinished: {{ .Values.migration.job.ttlSecondsAfterFinished }}
  template:
    metadata:
      name: {{ include "marty-service.fullname" . }}-migration
      labels:
        {{- include "marty-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: {{ .Values.migration.job.restartPolicy }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "marty-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: migration
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.migration.image.repository }}:{{ .Values.migration.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.migration.image.pullPolicy }}
        command: {{ .Values.migration.alembic.command | toJson }}
        env:
          # Database configuration
          - name: DATABASE_DSN
            value: {{ .Values.database.dsn | quote }}
          - name: DATABASE_HOST
            value: {{ .Values.database.host | quote }}
          - name: DATABASE_PORT
            value: {{ .Values.database.port | quote }}
          - name: DATABASE_NAME
            value: {{ .Values.database.name | quote }}
          - name: DATABASE_USER
            value: {{ .Values.database.user | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.passwordSecret.name }}
                key: {{ .Values.database.passwordSecret.key }}
          
          # Service environment
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          
          # Alembic configuration
          - name: ALEMBIC_CONFIG
            value: {{ .Values.migration.alembic.config_file | quote }}
        
        # Volume mounts for configuration
        volumeMounts:
        {{- if .Values.migration.alembic.config_file }}
        - name: alembic-config
          mountPath: {{ .Values.migration.alembic.config_file }}
          subPath: alembic.ini
          readOnly: true
        {{- end }}
        
        resources:
          {{- toYaml .Values.migration.resources | nindent 12 }}
      
      # Volumes
      volumes:
      {{- if .Values.migration.alembic.config_file }}
      - name: alembic-config
        configMap:
          name: {{ include "marty-service.fullname" . }}-alembic-config
      {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}