name: Generate API Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**/*.py'
      - 'scripts/generate_api_docs.py'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**/*.py'
      - 'scripts/generate_api_docs.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync
        uv add --dev pyyaml

    - name: Generate API documentation
      run: |
        chmod +x scripts/generate_api_docs.py
        uv run python scripts/generate_api_docs.py

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: api-documentation
        path: docs/api/
        retention-days: 30

    - name: Deploy to GitHub Pages (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/api
        destination_dir: api-docs

    - name: Comment on PR with documentation link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const { owner, repo, number } = context.issue;
          const runId = context.runId;

          const comment = `## ðŸ“– API Documentation Preview

          API documentation has been generated for this PR.

          You can download the documentation artifacts from the [workflow run](${context.serverUrl}/${owner}/${repo}/actions/runs/${runId}).

          ### Services Documented:
          - PKD Service API
          - Document Processing API
          - UI Application API
          - Combined Platform API

          The documentation includes:
          - Interactive API explorer (Redoc)
          - OpenAPI specifications (JSON/YAML)
          - Complete endpoint documentation
          `;

          github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: comment
          });
