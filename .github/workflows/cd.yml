name: Marty CD

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build_and_publish_containers:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        svc:
          - { name: "csca-service", dockerfile: "docker/csca-service.Dockerfile" }
          - { name: "document-signer", dockerfile: "docker/document-signer.Dockerfile" }
          - { name: "dtc-engine", dockerfile: "docker/dtc-engine.Dockerfile" }
          - { name: "inspection-system", dockerfile: "docker/inspection-system.Dockerfile" }
          - { name: "mdl-engine", dockerfile: "docker/mdl-engine.Dockerfile" }
          - { name: "mdoc-engine", dockerfile: "docker/mdoc-engine.Dockerfile" }
          - { name: "passport-engine", dockerfile: "docker/passport-engine.Dockerfile" }
          - { name: "pkd-service", dockerfile: "docker/pkd-service.Dockerfile" }
          - { name: "trust-anchor", dockerfile: "docker/trust-anchor.Dockerfile" }
          - { name: "ui-app", dockerfile: "docker/ui-app.Dockerfile" }

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3

    - name: Extract version from tag
      id: tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    # Build all service containers
    - name: Build and push ${{ matrix.svc.name }}
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ matrix.svc.dockerfile }}
        push: true
        platforms: linux/amd64,linux/arm64
        provenance: true
        tags: |
          ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:latest
          ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:${{ steps.tag.outputs.VERSION }}
        cache-from: type=gha,scope=${{ github.repository }}
        cache-to: type=gha,mode=max,scope=${{ github.repository }}

    - name: Generate SBOM for ${{ matrix.svc.name }}
      uses: anchore/sbom-action@v0
      with:
        image: ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:${{ steps.tag.outputs.VERSION }}
        output-file: ./sbom-${{ matrix.svc.name }}-${{ steps.tag.outputs.VERSION }}.spdx.json
        format: spdx-json

    - name: Upload SBOM artifact for ${{ matrix.svc.name }}
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ matrix.svc.name }}-${{ steps.tag.outputs.VERSION }}
        path: ./sbom-${{ matrix.svc.name }}-${{ steps.tag.outputs.VERSION }}.spdx.json

    - name: Sign container image for ${{ matrix.svc.name }}
      run: |
        cosign sign --yes ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:${{ steps.tag.outputs.VERSION }}
        cosign sign --yes ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:latest

  publish_helm_charts:
    runs-on: ubuntu-latest
    needs: build_and_publish_containers
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        svc:
          - "csca-service"
          - "document-signer"
          - "dtc-engine"
          - "inspection-system"
          - "mdl-engine"
          - "mdoc-engine"
          - "passport-engine"
          - "pkd-service"
          - "trust-anchor"
          - "ui-app"

    steps:
    - uses: actions/checkout@v3

    - name: Extract version from tag
      id: tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Package and push ${{ matrix.svc }} chart
      run: |
        cd helm/charts/${{ matrix.svc }}
        helm lint .
        helm template . --values values.yaml
        helm package --sign .
        helm push ${{ matrix.svc }}-${{ steps.tag.outputs.VERSION }}.tgz oci://ghcr.io/${{ github.repository }}/charts
        # Upload provenance file as artifact
        if [ -f ${{ matrix.svc }}-${{ steps.tag.outputs.VERSION }}.tgz.prov ]; then
          echo "Uploading provenance file for ${{ matrix.svc }}"
          # Copy prov file to workspace root for artifact upload
          cp ${{ matrix.svc }}-${{ steps.tag.outputs.VERSION }}.tgz.prov ../../../
        fi

    - name: Upload Helm provenance artifacts
      uses: actions/upload-artifact@v4
      with:
        name: helm-provenance-${{ steps.tag.outputs.VERSION }}
        path: ./*.tgz.prov

  create_release:
    runs-on: ubuntu-latest
    needs: [build_and_publish_containers, publish_helm_charts]
    permissions:
      contents: write
      packages: read
    steps:
    - name: Extract version from tag
      id: tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: release-notes
      run: |
        cat << EOF > release_notes.md
        ## üöÄ Marty v${{ steps.tag.outputs.VERSION }} Release

        ### üì¶ Container Images
        All images are available on [GitHub Container Registry](https://ghcr.io/${{ github.repository }})

        | Service | Image | Digest |
        |---------|-------|--------|
        | CSCA Service | \`ghcr.io/${{ github.repository }}/csca-service:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | Document Signer | \`ghcr.io/${{ github.repository }}/document-signer:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | DTC Engine | \`ghcr.io/${{ github.repository }}/dtc-engine:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | Inspection System | \`ghcr.io/${{ github.repository }}/inspection-system:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | MDL Engine | \`ghcr.io/${{ github.repository }}/mdl-engine:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | MDOC Engine | \`ghcr.io/${{ github.repository }}/mdoc-engine:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | Passport Engine | \`ghcr.io/${{ github.repository }}/passport-engine:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | PKD Service | \`ghcr.io/${{ github.repository }}/pkd-service:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | Trust Anchor | \`ghcr.io/${{ github.repository }}/trust-anchor:${{ steps.tag.outputs.VERSION }}\` | TBD |
        | UI App | \`ghcr.io/${{ github.repository }}/ui-app:${{ steps.tag.outputs.VERSION }}\` | TBD |

        ### üõ°Ô∏è Helm Charts
        Charts are published to [GitHub Container Registry](https://ghcr.io/${{ github.repository }}/charts)

        | Chart | Version | Provenance |
        |-------|---------|------------|
        | csca-service | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | document-signer | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | dtc-engine | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | inspection-system | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | mdl-engine | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | mdoc-engine | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | passport-engine | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | pkd-service | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | trust-anchor | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |
        | ui-app | ${{ steps.tag.outputs.VERSION }} | ‚úÖ Signed |

        ### üîí Security Features
        - ‚úÖ **Build Attestation**: Provenance enabled for all images
        - ‚úÖ **SBOM**: Software Bill of Materials generated (SPDX format)
        - ‚úÖ **Image Signing**: Cosign signatures with keyless signing
        - ‚úÖ **Chart Signing**: Helm provenance files generated
        - ‚úÖ **Multi-Architecture**: linux/amd64, linux/arm64 support

        ### üìã Installation

        \`\`\`bash
        # Add Helm repository
        helm repo add marty https://ghcr.io/${{ github.repository }}/charts
        helm repo update

        # Install a service (example)
        helm install csca-service marty/csca-service --version ${{ steps.tag.outputs.VERSION }}
        \`\`\`

        ### üîç Verification

        \`\`\`bash
        # Verify image signature
        cosign verify ghcr.io/${{ github.repository }}/csca-service:${{ steps.tag.outputs.VERSION }}

        # Verify chart provenance
        helm verify csca-service-${{ steps.tag.outputs.VERSION }}.tgz
        \`\`\`
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Marty v${{ steps.tag.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}