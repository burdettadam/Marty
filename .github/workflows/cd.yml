name: Marty CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_publish_containers:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        svc:
          - { name: "csca-service", dockerfile: "docker/csca-service.Dockerfile" }
          - { name: "document-signer", dockerfile: "docker/document-signer.Dockerfile" }
          - { name: "dtc-engine", dockerfile: "docker/dtc-engine.Dockerfile" }
          - { name: "inspection-system", dockerfile: "docker/inspection-system.Dockerfile" }
          - { name: "mdl-engine", dockerfile: "docker/mdl-engine.Dockerfile" }
          - { name: "mdoc-engine", dockerfile: "docker/mdoc-engine.Dockerfile" }
          - { name: "passport-engine", dockerfile: "docker/passport-engine.Dockerfile" }
          - { name: "pkd-service", dockerfile: "docker/pkd-service.Dockerfile" }
          - { name: "trust-anchor", dockerfile: "docker/trust-anchor.Dockerfile" }
          - { name: "ui-app", dockerfile: "docker/ui-app.Dockerfile" }

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    # Build all service containers
    - name: Build and push ${{ matrix.svc.name }}
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ matrix.svc.dockerfile }}
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:latest
          ghcr.io/${{ github.repository }}/${{ matrix.svc.name }}:${{ steps.tag.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  publish_helm_charts:
    runs-on: ubuntu-latest
    needs: build_and_publish_containers
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        svc:
          - "csca-service"
          - "document-signer"
          - "dtc-engine"
          - "inspection-system"
          - "mdl-engine"
          - "mdoc-engine"
          - "passport-engine"
          - "pkd-service"
          - "trust-anchor"
          - "ui-app"

    steps:
    - uses: actions/checkout@v3

    - name: Extract version from tag
      id: tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Package and push ${{ matrix.svc }} chart
      run: |
        cd helm/charts/${{ matrix.svc }}
        helm package .
        helm push ${{ matrix.svc }}-${{ steps.tag.outputs.VERSION }}.tgz oci://ghcr.io/${{ github.repository }}/charts