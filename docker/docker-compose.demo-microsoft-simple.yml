# Microsoft Authenticator Demo Environment for Marty with VS Code Port Forwarding
# Simplified version using python:3.10-slim for easy setup

networks:
  marty-microsoft-network:
    driver: bridge

volumes:
  microsoft_demo_postgres_data:

services:
  # PostgreSQL with schemas for Microsoft demo
  postgres-microsoft:
    image: postgres:15
    container_name: marty-microsoft-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-martyuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-martypassword}
      POSTGRES_DB: ${POSTGRES_DB:-martydb}
      POSTGRES_MULTIPLE_DATABASES: "martydb,trust_db,credentials_db,audit_db"
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - microsoft_demo_postgres_data:/var/lib/postgresql/data
      - ../scripts/init-demo-db.sql:/docker-entrypoint-initdb.d/init-demo-db.sql
    networks:
      - marty-microsoft-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-martyuser} -d ${POSTGRES_DB:-martydb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # OID4VCI Issuer API - Microsoft Authenticator credential issuance
  issuer-api-microsoft:
    image: python:3.10-slim
    container_name: marty-microsoft-issuer-api
    environment:
      - ISSUER_BASE_URL=${ISSUER_BASE_URL:-https://localhost:8000}
      - CREDENTIAL_ISSUER_DID=${CREDENTIAL_ISSUER_DID:-did:web:localhost%3A8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - PORT_FORWARD_MODE=${PORT_FORWARD_MODE:-false}
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    working_dir: /app
    command:
      - bash
      - -c
      - |
        pip install fastapi uvicorn grpcio qrcode[pil] pydantic jinja2 &&
        python -m uvicorn src.apps.issuer_api:app --host 0.0.0.0 --port 8000
    volumes:
      - ../src/apps:/app/src/apps
      - ../src/marty_common:/app/src/marty_common
      - ../src/shared:/app/src/shared
      - ../proto:/app/proto
    networks:
      - marty-microsoft-network
    depends_on:
      postgres-microsoft:
        condition: service_healthy

  # OID4VP Verifier API - Microsoft Authenticator credential verification
  verifier-api-microsoft:
    image: python:3.10-slim
    container_name: marty-microsoft-verifier-api
    environment:
      - VERIFIER_BASE_URL=${VERIFIER_BASE_URL:-https://localhost:8001}
      - VERIFIER_DID=${VERIFIER_DID:-did:web:localhost%3A8001}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - PORT_FORWARD_MODE=${PORT_FORWARD_MODE:-false}
      - PYTHONPATH=/app
    ports:
      - "8001:8001"
    working_dir: /app
    command:
      - bash
      - -c
      - |
        pip install fastapi uvicorn grpcio jinja2 pydantic &&
        python -m uvicorn src.apps.verifier_api:app --host 0.0.0.0 --port 8001
    volumes:
      - ../src/apps:/app/src/apps
      - ../src/marty_common:/app/src/marty_common
      - ../src/shared:/app/src/shared
      - ../proto:/app/proto
    networks:
      - marty-microsoft-network
    depends_on:
      postgres-microsoft:
        condition: service_healthy
