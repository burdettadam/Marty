# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import cmc_engine_pb2 as cmc__engine__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cmc_engine_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CMCEngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCMC = channel.unary_unary(
                '/cmc.CMCEngine/CreateCMC',
                request_serializer=cmc__engine__pb2.CreateCMCRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.CreateCMCResponse.FromString,
                _registered_method=True)
        self.GetCMC = channel.unary_unary(
                '/cmc.CMCEngine/GetCMC',
                request_serializer=cmc__engine__pb2.GetCMCRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.CMCResponse.FromString,
                _registered_method=True)
        self.SignCMC = channel.unary_unary(
                '/cmc.CMCEngine/SignCMC',
                request_serializer=cmc__engine__pb2.SignCMCRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.SignCMCResponse.FromString,
                _registered_method=True)
        self.GenerateVDSNCBarcode = channel.unary_unary(
                '/cmc.CMCEngine/GenerateVDSNCBarcode',
                request_serializer=cmc__engine__pb2.GenerateVDSNCRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.GenerateVDSNCResponse.FromString,
                _registered_method=True)
        self.GenerateCMCQRCode = channel.unary_unary(
                '/cmc.CMCEngine/GenerateCMCQRCode',
                request_serializer=cmc__engine__pb2.GenerateQRCodeRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.GenerateQRCodeResponse.FromString,
                _registered_method=True)
        self.VerifyCMC = channel.unary_unary(
                '/cmc.CMCEngine/VerifyCMC',
                request_serializer=cmc__engine__pb2.VerifyCMCRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.VerifyCMCResponse.FromString,
                _registered_method=True)
        self.CheckBackgroundVerification = channel.unary_unary(
                '/cmc.CMCEngine/CheckBackgroundVerification',
                request_serializer=cmc__engine__pb2.BackgroundCheckRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.BackgroundCheckResponse.FromString,
                _registered_method=True)
        self.EnforceBackgroundPrerequisite = channel.unary_unary(
                '/cmc.CMCEngine/EnforceBackgroundPrerequisite',
                request_serializer=cmc__engine__pb2.BackgroundPrerequisiteRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.BackgroundPrerequisiteResponse.FromString,
                _registered_method=True)
        self.ValidateIssuanceEligibility = channel.unary_unary(
                '/cmc.CMCEngine/ValidateIssuanceEligibility',
                request_serializer=cmc__engine__pb2.IssuanceEligibilityRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.IssuanceEligibilityResponse.FromString,
                _registered_method=True)
        self.UpdateVisaFreeStatus = channel.unary_unary(
                '/cmc.CMCEngine/UpdateVisaFreeStatus',
                request_serializer=cmc__engine__pb2.VisaFreeStatusRequest.SerializeToString,
                response_deserializer=cmc__engine__pb2.VisaFreeStatusResponse.FromString,
                _registered_method=True)


class CMCEngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCMC(self, request, context):
        """Create a new crew member certificate
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCMC(self, request, context):
        """Retrieve a CMC by document number
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignCMC(self, request, context):
        """Sign a CMC using Document Signer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateVDSNCBarcode(self, request, context):
        """Generate VDS-NC barcode for offline verification
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateCMCQRCode(self, request, context):
        """Generate QR code for CMC access
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCMC(self, request, context):
        """Verify a CMC (for inspection system integration)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBackgroundVerification(self, request, context):
        """Check background verification status (Annex 9 compliance)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnforceBackgroundPrerequisite(self, request, context):
        """Annex 9 Background Check Prerequisite Enforcement
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateIssuanceEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVisaFreeStatus(self, request, context):
        """Update visa-free entry eligibility
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CMCEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCMC': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCMC,
                    request_deserializer=cmc__engine__pb2.CreateCMCRequest.FromString,
                    response_serializer=cmc__engine__pb2.CreateCMCResponse.SerializeToString,
            ),
            'GetCMC': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCMC,
                    request_deserializer=cmc__engine__pb2.GetCMCRequest.FromString,
                    response_serializer=cmc__engine__pb2.CMCResponse.SerializeToString,
            ),
            'SignCMC': grpc.unary_unary_rpc_method_handler(
                    servicer.SignCMC,
                    request_deserializer=cmc__engine__pb2.SignCMCRequest.FromString,
                    response_serializer=cmc__engine__pb2.SignCMCResponse.SerializeToString,
            ),
            'GenerateVDSNCBarcode': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateVDSNCBarcode,
                    request_deserializer=cmc__engine__pb2.GenerateVDSNCRequest.FromString,
                    response_serializer=cmc__engine__pb2.GenerateVDSNCResponse.SerializeToString,
            ),
            'GenerateCMCQRCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateCMCQRCode,
                    request_deserializer=cmc__engine__pb2.GenerateQRCodeRequest.FromString,
                    response_serializer=cmc__engine__pb2.GenerateQRCodeResponse.SerializeToString,
            ),
            'VerifyCMC': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCMC,
                    request_deserializer=cmc__engine__pb2.VerifyCMCRequest.FromString,
                    response_serializer=cmc__engine__pb2.VerifyCMCResponse.SerializeToString,
            ),
            'CheckBackgroundVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBackgroundVerification,
                    request_deserializer=cmc__engine__pb2.BackgroundCheckRequest.FromString,
                    response_serializer=cmc__engine__pb2.BackgroundCheckResponse.SerializeToString,
            ),
            'EnforceBackgroundPrerequisite': grpc.unary_unary_rpc_method_handler(
                    servicer.EnforceBackgroundPrerequisite,
                    request_deserializer=cmc__engine__pb2.BackgroundPrerequisiteRequest.FromString,
                    response_serializer=cmc__engine__pb2.BackgroundPrerequisiteResponse.SerializeToString,
            ),
            'ValidateIssuanceEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateIssuanceEligibility,
                    request_deserializer=cmc__engine__pb2.IssuanceEligibilityRequest.FromString,
                    response_serializer=cmc__engine__pb2.IssuanceEligibilityResponse.SerializeToString,
            ),
            'UpdateVisaFreeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVisaFreeStatus,
                    request_deserializer=cmc__engine__pb2.VisaFreeStatusRequest.FromString,
                    response_serializer=cmc__engine__pb2.VisaFreeStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cmc.CMCEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cmc.CMCEngine', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CMCEngine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCMC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/CreateCMC',
            cmc__engine__pb2.CreateCMCRequest.SerializeToString,
            cmc__engine__pb2.CreateCMCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCMC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/GetCMC',
            cmc__engine__pb2.GetCMCRequest.SerializeToString,
            cmc__engine__pb2.CMCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SignCMC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/SignCMC',
            cmc__engine__pb2.SignCMCRequest.SerializeToString,
            cmc__engine__pb2.SignCMCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateVDSNCBarcode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/GenerateVDSNCBarcode',
            cmc__engine__pb2.GenerateVDSNCRequest.SerializeToString,
            cmc__engine__pb2.GenerateVDSNCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateCMCQRCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/GenerateCMCQRCode',
            cmc__engine__pb2.GenerateQRCodeRequest.SerializeToString,
            cmc__engine__pb2.GenerateQRCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyCMC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/VerifyCMC',
            cmc__engine__pb2.VerifyCMCRequest.SerializeToString,
            cmc__engine__pb2.VerifyCMCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckBackgroundVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/CheckBackgroundVerification',
            cmc__engine__pb2.BackgroundCheckRequest.SerializeToString,
            cmc__engine__pb2.BackgroundCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnforceBackgroundPrerequisite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/EnforceBackgroundPrerequisite',
            cmc__engine__pb2.BackgroundPrerequisiteRequest.SerializeToString,
            cmc__engine__pb2.BackgroundPrerequisiteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateIssuanceEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/ValidateIssuanceEligibility',
            cmc__engine__pb2.IssuanceEligibilityRequest.SerializeToString,
            cmc__engine__pb2.IssuanceEligibilityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateVisaFreeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cmc.CMCEngine/UpdateVisaFreeStatus',
            cmc__engine__pb2.VisaFreeStatusRequest.SerializeToString,
            cmc__engine__pb2.VisaFreeStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
