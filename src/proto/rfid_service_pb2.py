# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: rfid_service.proto
# Protobuf Python Version: 6.32.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    1,
    '',
    'rfid_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_services_pb2 as common__services__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12rfid_service.proto\x12\x04rfid\x1a\x15\x63ommon_services.proto\"*\n\x12ListReadersRequest\x12\x14\n\x0cinclude_mock\x18\x01 \x01(\x08\"a\n\x13ListReadersResponse\x12!\n\x07readers\x18\x01 \x03(\x0b\x32\x10.rfid.ReaderInfo\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\"}\n\nReaderInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.rfid.ReaderType\x12\"\n\x06status\x18\x03 \x01(\x0e\x32\x12.rfid.ReaderStatus\x12\x0b\n\x03\x61tr\x18\x04 \x01(\t\x12\x10\n\x08protocol\x18\x05 \x01(\t\"D\n\x14\x43onnectReaderRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12\x17\n\x0ftimeout_seconds\x18\x02 \x01(\x05\"`\n\x15\x43onnectReaderResponse\x12\x11\n\tconnected\x18\x01 \x01(\x08\x12\x0b\n\x03\x61tr\x18\x02 \x01(\t\x12\'\n\x06status\x18\x03 \x01(\x0b\x32\x17.common_services.Status\".\n\x17\x44isconnectReaderRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\"Y\n\x18\x44isconnectReaderResponse\x12\x14\n\x0c\x64isconnected\x18\x01 \x01(\x08\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\"-\n\x16GetReaderStatusRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\"d\n\x17GetReaderStatusResponse\x12 \n\x06reader\x18\x01 \x01(\x0b\x32\x10.rfid.ReaderInfo\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\";\n\x0fReadCardRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x61ta_groups\x18\x02 \x03(\t\"\xab\x01\n\x10ReadCardResponse\x12;\n\x0b\x64\x61ta_groups\x18\x01 \x03(\x0b\x32&.rfid.ReadCardResponse.DataGroupsEntry\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\x1a\x31\n\x0f\x44\x61taGroupsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"<\n\x0fSendAPDURequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12\x14\n\x0c\x61pdu_command\x18\x02 \x01(\x0c\"l\n\x10SendAPDUResponse\x12\x15\n\rapdu_response\x18\x01 \x01(\x0c\x12\x0b\n\x03sw1\x18\x02 \x01(\x05\x12\x0b\n\x03sw2\x18\x03 \x01(\x05\x12\'\n\x06status\x18\x04 \x01(\x0b\x32\x17.common_services.Status\"$\n\rGetATRRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\"F\n\x0eGetATRResponse\x12\x0b\n\x03\x61tr\x18\x01 \x01(\t\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\"e\n\x13ReadPassportRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12\x1a\n\x03mrz\x18\x02 \x01(\x0b\x32\r.rfid.MRZData\x12\x1d\n\x15requested_data_groups\x18\x03 \x03(\t\"Q\n\x07MRZData\x12\x17\n\x0fpassport_number\x18\x01 \x01(\t\x12\x15\n\rdate_of_birth\x18\x02 \x01(\t\x12\x16\n\x0e\x64\x61te_of_expiry\x18\x03 \x01(\t\"e\n\x14ReadPassportResponse\x12$\n\x08passport\x18\x01 \x01(\x0b\x32\x12.rfid.PassportData\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\"\xea\x01\n\x0cPassportData\x12\x1f\n\x08mrz_info\x18\x01 \x01(\x0b\x32\r.rfid.MRZInfo\x12\x37\n\x0b\x64\x61ta_groups\x18\x02 \x03(\x0b\x32\".rfid.PassportData.DataGroupsEntry\x12$\n\x08security\x18\x03 \x01(\x0b\x32\x12.rfid.SecurityData\x12\'\n\nbiometrics\x18\x04 \x01(\x0b\x32\x13.rfid.BiometricData\x1a\x31\n\x0f\x44\x61taGroupsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\x81\x02\n\x07MRZInfo\x12\x15\n\rdocument_code\x18\x01 \x01(\t\x12\x17\n\x0fissuing_country\x18\x02 \x01(\t\x12\x0f\n\x07surname\x18\x03 \x01(\t\x12\x13\n\x0bgiven_names\x18\x04 \x01(\t\x12\x17\n\x0fpassport_number\x18\x05 \x01(\t\x12\x13\n\x0bnationality\x18\x06 \x01(\t\x12\x15\n\rdate_of_birth\x18\x07 \x01(\t\x12\x0b\n\x03sex\x18\x08 \x01(\t\x12\x16\n\x0e\x64\x61te_of_expiry\x18\t \x01(\t\x12\x17\n\x0fpersonal_number\x18\n \x01(\t\x12\x1d\n\x15\x63heck_digit_composite\x18\x0b \x01(\t\"\x83\x01\n\x0cSecurityData\x12\x10\n\x08sod_data\x18\x01 \x01(\x0c\x12\x17\n\x0fsignature_valid\x18\x02 \x01(\x08\x12\x19\n\x11\x63\x65rtificate_valid\x18\x03 \x01(\x08\x12\x12\n\nissuing_ca\x18\x04 \x01(\t\x12\x19\n\x11\x63\x65rtificate_chain\x18\x05 \x03(\t\"\x87\x01\n\rBiometricData\x12\x14\n\x0c\x66\x61\x63ial_image\x18\x01 \x01(\x0c\x12\x1d\n\x15\x66ingerprint_templates\x18\x02 \x03(\x0c\x12\x11\n\tiris_data\x18\x03 \x01(\x0c\x12.\n\x0equality_scores\x18\x04 \x03(\x0b\x32\x16.rfid.BiometricQuality\"e\n\x10\x42iometricQuality\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.rfid.BiometricType\x12\x15\n\rquality_score\x18\x02 \x01(\x05\x12\x17\n\x0fquality_details\x18\x03 \x01(\t\"\x86\x01\n\x15VerifyDocumentRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12$\n\x08passport\x18\x02 \x01(\x0b\x32\x12.rfid.PassportData\x12\x19\n\x11verify_biometrics\x18\x03 \x01(\x08\x12\x17\n\x0freference_image\x18\x04 \x01(\x0c\"k\n\x16VerifyDocumentResponse\x12(\n\x06result\x18\x01 \x01(\x0b\x32\x18.rfid.VerificationResult\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status\"\xbf\x01\n\x12VerificationResult\x12\x1a\n\x12\x64ocument_authentic\x18\x01 \x01(\x08\x12\x1b\n\x13\x63ryptographic_valid\x18\x02 \x01(\x08\x12\x17\n\x0f\x62iometric_match\x18\x03 \x01(\x08\x12\x17\n\x0f\x62iometric_score\x18\x04 \x01(\x02\x12\x1c\n\x14verification_details\x18\x05 \x03(\t\x12\x10\n\x08warnings\x18\x06 \x03(\t\x12\x0e\n\x06\x65rrors\x18\x07 \x03(\t\"H\n\x18\x45xtractBiometricsRequest\x12\x13\n\x0breader_name\x18\x01 \x01(\t\x12\x17\n\x0f\x62iometric_types\x18\x02 \x03(\t\"m\n\x19\x45xtractBiometricsResponse\x12\'\n\nbiometrics\x18\x01 \x01(\x0b\x32\x13.rfid.BiometricData\x12\'\n\x06status\x18\x02 \x01(\x0b\x32\x17.common_services.Status*\x83\x01\n\nReaderType\x12\x17\n\x13READER_TYPE_UNKNOWN\x10\x00\x12\x14\n\x10READER_TYPE_PCSC\x10\x01\x12\x17\n\x13READER_TYPE_ACR122U\x10\x02\x12\x17\n\x13READER_TYPE_OMNIKEY\x10\x03\x12\x14\n\x10READER_TYPE_MOCK\x10\x04*\x97\x01\n\x0cReaderStatus\x12\x19\n\x15READER_STATUS_UNKNOWN\x10\x00\x12\x1e\n\x1aREADER_STATUS_DISCONNECTED\x10\x01\x12\x1b\n\x17READER_STATUS_CONNECTED\x10\x02\x12\x16\n\x12READER_STATUS_BUSY\x10\x03\x12\x17\n\x13READER_STATUS_ERROR\x10\x04*\x7f\n\rBiometricType\x12\x1a\n\x16\x42IOMETRIC_TYPE_UNKNOWN\x10\x00\x12\x19\n\x15\x42IOMETRIC_TYPE_FACIAL\x10\x01\x12\x1e\n\x1a\x42IOMETRIC_TYPE_FINGERPRINT\x10\x02\x12\x17\n\x13\x42IOMETRIC_TYPE_IRIS\x10\x03\x32\xd9\x05\n\x11RFIDReaderService\x12\x42\n\x0bListReaders\x12\x18.rfid.ListReadersRequest\x1a\x19.rfid.ListReadersResponse\x12H\n\rConnectReader\x12\x1a.rfid.ConnectReaderRequest\x1a\x1b.rfid.ConnectReaderResponse\x12Q\n\x10\x44isconnectReader\x12\x1d.rfid.DisconnectReaderRequest\x1a\x1e.rfid.DisconnectReaderResponse\x12N\n\x0fGetReaderStatus\x12\x1c.rfid.GetReaderStatusRequest\x1a\x1d.rfid.GetReaderStatusResponse\x12\x39\n\x08ReadCard\x12\x15.rfid.ReadCardRequest\x1a\x16.rfid.ReadCardResponse\x12\x39\n\x08SendAPDU\x12\x15.rfid.SendAPDURequest\x1a\x16.rfid.SendAPDUResponse\x12\x33\n\x06GetATR\x12\x13.rfid.GetATRRequest\x1a\x14.rfid.GetATRResponse\x12\x45\n\x0cReadPassport\x12\x19.rfid.ReadPassportRequest\x1a\x1a.rfid.ReadPassportResponse\x12K\n\x0eVerifyDocument\x12\x1b.rfid.VerifyDocumentRequest\x1a\x1c.rfid.VerifyDocumentResponse\x12T\n\x11\x45xtractBiometrics\x12\x1e.rfid.ExtractBiometricsRequest\x1a\x1f.rfid.ExtractBiometricsResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rfid_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_READCARDRESPONSE_DATAGROUPSENTRY']._loaded_options = None
  _globals['_READCARDRESPONSE_DATAGROUPSENTRY']._serialized_options = b'8\001'
  _globals['_PASSPORTDATA_DATAGROUPSENTRY']._loaded_options = None
  _globals['_PASSPORTDATA_DATAGROUPSENTRY']._serialized_options = b'8\001'
  _globals['_READERTYPE']._serialized_start=3081
  _globals['_READERTYPE']._serialized_end=3212
  _globals['_READERSTATUS']._serialized_start=3215
  _globals['_READERSTATUS']._serialized_end=3366
  _globals['_BIOMETRICTYPE']._serialized_start=3368
  _globals['_BIOMETRICTYPE']._serialized_end=3495
  _globals['_LISTREADERSREQUEST']._serialized_start=51
  _globals['_LISTREADERSREQUEST']._serialized_end=93
  _globals['_LISTREADERSRESPONSE']._serialized_start=95
  _globals['_LISTREADERSRESPONSE']._serialized_end=192
  _globals['_READERINFO']._serialized_start=194
  _globals['_READERINFO']._serialized_end=319
  _globals['_CONNECTREADERREQUEST']._serialized_start=321
  _globals['_CONNECTREADERREQUEST']._serialized_end=389
  _globals['_CONNECTREADERRESPONSE']._serialized_start=391
  _globals['_CONNECTREADERRESPONSE']._serialized_end=487
  _globals['_DISCONNECTREADERREQUEST']._serialized_start=489
  _globals['_DISCONNECTREADERREQUEST']._serialized_end=535
  _globals['_DISCONNECTREADERRESPONSE']._serialized_start=537
  _globals['_DISCONNECTREADERRESPONSE']._serialized_end=626
  _globals['_GETREADERSTATUSREQUEST']._serialized_start=628
  _globals['_GETREADERSTATUSREQUEST']._serialized_end=673
  _globals['_GETREADERSTATUSRESPONSE']._serialized_start=675
  _globals['_GETREADERSTATUSRESPONSE']._serialized_end=775
  _globals['_READCARDREQUEST']._serialized_start=777
  _globals['_READCARDREQUEST']._serialized_end=836
  _globals['_READCARDRESPONSE']._serialized_start=839
  _globals['_READCARDRESPONSE']._serialized_end=1010
  _globals['_READCARDRESPONSE_DATAGROUPSENTRY']._serialized_start=961
  _globals['_READCARDRESPONSE_DATAGROUPSENTRY']._serialized_end=1010
  _globals['_SENDAPDUREQUEST']._serialized_start=1012
  _globals['_SENDAPDUREQUEST']._serialized_end=1072
  _globals['_SENDAPDURESPONSE']._serialized_start=1074
  _globals['_SENDAPDURESPONSE']._serialized_end=1182
  _globals['_GETATRREQUEST']._serialized_start=1184
  _globals['_GETATRREQUEST']._serialized_end=1220
  _globals['_GETATRRESPONSE']._serialized_start=1222
  _globals['_GETATRRESPONSE']._serialized_end=1292
  _globals['_READPASSPORTREQUEST']._serialized_start=1294
  _globals['_READPASSPORTREQUEST']._serialized_end=1395
  _globals['_MRZDATA']._serialized_start=1397
  _globals['_MRZDATA']._serialized_end=1478
  _globals['_READPASSPORTRESPONSE']._serialized_start=1480
  _globals['_READPASSPORTRESPONSE']._serialized_end=1581
  _globals['_PASSPORTDATA']._serialized_start=1584
  _globals['_PASSPORTDATA']._serialized_end=1818
  _globals['_PASSPORTDATA_DATAGROUPSENTRY']._serialized_start=961
  _globals['_PASSPORTDATA_DATAGROUPSENTRY']._serialized_end=1010
  _globals['_MRZINFO']._serialized_start=1821
  _globals['_MRZINFO']._serialized_end=2078
  _globals['_SECURITYDATA']._serialized_start=2081
  _globals['_SECURITYDATA']._serialized_end=2212
  _globals['_BIOMETRICDATA']._serialized_start=2215
  _globals['_BIOMETRICDATA']._serialized_end=2350
  _globals['_BIOMETRICQUALITY']._serialized_start=2352
  _globals['_BIOMETRICQUALITY']._serialized_end=2453
  _globals['_VERIFYDOCUMENTREQUEST']._serialized_start=2456
  _globals['_VERIFYDOCUMENTREQUEST']._serialized_end=2590
  _globals['_VERIFYDOCUMENTRESPONSE']._serialized_start=2592
  _globals['_VERIFYDOCUMENTRESPONSE']._serialized_end=2699
  _globals['_VERIFICATIONRESULT']._serialized_start=2702
  _globals['_VERIFICATIONRESULT']._serialized_end=2893
  _globals['_EXTRACTBIOMETRICSREQUEST']._serialized_start=2895
  _globals['_EXTRACTBIOMETRICSREQUEST']._serialized_end=2967
  _globals['_EXTRACTBIOMETRICSRESPONSE']._serialized_start=2969
  _globals['_EXTRACTBIOMETRICSRESPONSE']._serialized_end=3078
  _globals['_RFIDREADERSERVICE']._serialized_start=3498
  _globals['_RFIDREADERSERVICE']._serialized_end=4227
# @@protoc_insertion_point(module_scope)
