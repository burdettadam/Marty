# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import td2_service_pb2 as td2__service__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in td2_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TD2ServiceStub(object):
    """TD-2 Document Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/CreateTD2Document',
                request_serializer=td2__service__pb2.CreateTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.CreateTD2DocumentResponse.FromString,
                _registered_method=True)
        self.IssueTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/IssueTD2Document',
                request_serializer=td2__service__pb2.IssueTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.IssueTD2DocumentResponse.FromString,
                _registered_method=True)
        self.VerifyTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/VerifyTD2Document',
                request_serializer=td2__service__pb2.VerifyTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.VerifyTD2DocumentResponse.FromString,
                _registered_method=True)
        self.GetTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/GetTD2Document',
                request_serializer=td2__service__pb2.GetTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.GetTD2DocumentResponse.FromString,
                _registered_method=True)
        self.SearchTD2Documents = channel.unary_unary(
                '/td2_service.TD2Service/SearchTD2Documents',
                request_serializer=td2__service__pb2.SearchTD2DocumentsRequest.SerializeToString,
                response_deserializer=td2__service__pb2.SearchTD2DocumentsResponse.FromString,
                _registered_method=True)
        self.UpdateTD2DocumentStatus = channel.unary_unary(
                '/td2_service.TD2Service/UpdateTD2DocumentStatus',
                request_serializer=td2__service__pb2.UpdateTD2DocumentStatusRequest.SerializeToString,
                response_deserializer=td2__service__pb2.UpdateTD2DocumentStatusResponse.FromString,
                _registered_method=True)
        self.RevokeTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/RevokeTD2Document',
                request_serializer=td2__service__pb2.RevokeTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.RevokeTD2DocumentResponse.FromString,
                _registered_method=True)
        self.RenewTD2Document = channel.unary_unary(
                '/td2_service.TD2Service/RenewTD2Document',
                request_serializer=td2__service__pb2.RenewTD2DocumentRequest.SerializeToString,
                response_deserializer=td2__service__pb2.RenewTD2DocumentResponse.FromString,
                _registered_method=True)
        self.CreateTD2DocumentsBatch = channel.unary_unary(
                '/td2_service.TD2Service/CreateTD2DocumentsBatch',
                request_serializer=td2__service__pb2.CreateTD2DocumentsBatchRequest.SerializeToString,
                response_deserializer=td2__service__pb2.CreateTD2DocumentsBatchResponse.FromString,
                _registered_method=True)
        self.VerifyTD2DocumentsBatch = channel.unary_unary(
                '/td2_service.TD2Service/VerifyTD2DocumentsBatch',
                request_serializer=td2__service__pb2.VerifyTD2DocumentsBatchRequest.SerializeToString,
                response_deserializer=td2__service__pb2.VerifyTD2DocumentsBatchResponse.FromString,
                _registered_method=True)
        self.GetTD2Statistics = channel.unary_unary(
                '/td2_service.TD2Service/GetTD2Statistics',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=td2__service__pb2.TD2StatisticsResponse.FromString,
                _registered_method=True)
        self.GetExpiringTD2Documents = channel.unary_unary(
                '/td2_service.TD2Service/GetExpiringTD2Documents',
                request_serializer=td2__service__pb2.GetExpiringTD2DocumentsRequest.SerializeToString,
                response_deserializer=td2__service__pb2.GetExpiringTD2DocumentsResponse.FromString,
                _registered_method=True)


class TD2ServiceServicer(object):
    """TD-2 Document Service Definition
    """

    def CreateTD2Document(self, request, context):
        """Create a new TD-2 document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueTD2Document(self, request, context):
        """Issue a TD-2 document (finalize)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyTD2Document(self, request, context):
        """Verify a TD-2 document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTD2Document(self, request, context):
        """Get TD-2 document by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTD2Documents(self, request, context):
        """Search TD-2 documents
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTD2DocumentStatus(self, request, context):
        """Update TD-2 document status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeTD2Document(self, request, context):
        """Revoke TD-2 document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenewTD2Document(self, request, context):
        """Renew TD-2 document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTD2DocumentsBatch(self, request, context):
        """Batch operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyTD2DocumentsBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTD2Statistics(self, request, context):
        """Reports
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExpiringTD2Documents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TD2ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTD2Document,
                    request_deserializer=td2__service__pb2.CreateTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.CreateTD2DocumentResponse.SerializeToString,
            ),
            'IssueTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueTD2Document,
                    request_deserializer=td2__service__pb2.IssueTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.IssueTD2DocumentResponse.SerializeToString,
            ),
            'VerifyTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyTD2Document,
                    request_deserializer=td2__service__pb2.VerifyTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.VerifyTD2DocumentResponse.SerializeToString,
            ),
            'GetTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTD2Document,
                    request_deserializer=td2__service__pb2.GetTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.GetTD2DocumentResponse.SerializeToString,
            ),
            'SearchTD2Documents': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTD2Documents,
                    request_deserializer=td2__service__pb2.SearchTD2DocumentsRequest.FromString,
                    response_serializer=td2__service__pb2.SearchTD2DocumentsResponse.SerializeToString,
            ),
            'UpdateTD2DocumentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTD2DocumentStatus,
                    request_deserializer=td2__service__pb2.UpdateTD2DocumentStatusRequest.FromString,
                    response_serializer=td2__service__pb2.UpdateTD2DocumentStatusResponse.SerializeToString,
            ),
            'RevokeTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeTD2Document,
                    request_deserializer=td2__service__pb2.RevokeTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.RevokeTD2DocumentResponse.SerializeToString,
            ),
            'RenewTD2Document': grpc.unary_unary_rpc_method_handler(
                    servicer.RenewTD2Document,
                    request_deserializer=td2__service__pb2.RenewTD2DocumentRequest.FromString,
                    response_serializer=td2__service__pb2.RenewTD2DocumentResponse.SerializeToString,
            ),
            'CreateTD2DocumentsBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTD2DocumentsBatch,
                    request_deserializer=td2__service__pb2.CreateTD2DocumentsBatchRequest.FromString,
                    response_serializer=td2__service__pb2.CreateTD2DocumentsBatchResponse.SerializeToString,
            ),
            'VerifyTD2DocumentsBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyTD2DocumentsBatch,
                    request_deserializer=td2__service__pb2.VerifyTD2DocumentsBatchRequest.FromString,
                    response_serializer=td2__service__pb2.VerifyTD2DocumentsBatchResponse.SerializeToString,
            ),
            'GetTD2Statistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTD2Statistics,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=td2__service__pb2.TD2StatisticsResponse.SerializeToString,
            ),
            'GetExpiringTD2Documents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExpiringTD2Documents,
                    request_deserializer=td2__service__pb2.GetExpiringTD2DocumentsRequest.FromString,
                    response_serializer=td2__service__pb2.GetExpiringTD2DocumentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'td2_service.TD2Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('td2_service.TD2Service', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TD2Service(object):
    """TD-2 Document Service Definition
    """

    @staticmethod
    def CreateTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/CreateTD2Document',
            td2__service__pb2.CreateTD2DocumentRequest.SerializeToString,
            td2__service__pb2.CreateTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IssueTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/IssueTD2Document',
            td2__service__pb2.IssueTD2DocumentRequest.SerializeToString,
            td2__service__pb2.IssueTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/VerifyTD2Document',
            td2__service__pb2.VerifyTD2DocumentRequest.SerializeToString,
            td2__service__pb2.VerifyTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/GetTD2Document',
            td2__service__pb2.GetTD2DocumentRequest.SerializeToString,
            td2__service__pb2.GetTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchTD2Documents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/SearchTD2Documents',
            td2__service__pb2.SearchTD2DocumentsRequest.SerializeToString,
            td2__service__pb2.SearchTD2DocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTD2DocumentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/UpdateTD2DocumentStatus',
            td2__service__pb2.UpdateTD2DocumentStatusRequest.SerializeToString,
            td2__service__pb2.UpdateTD2DocumentStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/RevokeTD2Document',
            td2__service__pb2.RevokeTD2DocumentRequest.SerializeToString,
            td2__service__pb2.RevokeTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RenewTD2Document(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/RenewTD2Document',
            td2__service__pb2.RenewTD2DocumentRequest.SerializeToString,
            td2__service__pb2.RenewTD2DocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTD2DocumentsBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/CreateTD2DocumentsBatch',
            td2__service__pb2.CreateTD2DocumentsBatchRequest.SerializeToString,
            td2__service__pb2.CreateTD2DocumentsBatchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyTD2DocumentsBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/VerifyTD2DocumentsBatch',
            td2__service__pb2.VerifyTD2DocumentsBatchRequest.SerializeToString,
            td2__service__pb2.VerifyTD2DocumentsBatchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTD2Statistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/GetTD2Statistics',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            td2__service__pb2.TD2StatisticsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExpiringTD2Documents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/td2_service.TD2Service/GetExpiringTD2Documents',
            td2__service__pb2.GetExpiringTD2DocumentsRequest.SerializeToString,
            td2__service__pb2.GetExpiringTD2DocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
