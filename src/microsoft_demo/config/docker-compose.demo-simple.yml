# Microsoft Authenticator Demo Environment - Simple Setup
# Optimized for VS Code port forwarding and quick development
# Uses the consolidated microsoft_demo structure

networks:
  marty-microsoft-network:
    driver: bridge

volumes:
  microsoft_demo_postgres_data:

services:
  # PostgreSQL with schemas for Microsoft demo
  postgres-microsoft:
    image: postgres:15
    container_name: marty-microsoft-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-martyuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-martypassword}
      POSTGRES_DB: ${POSTGRES_DB:-martydb}
      POSTGRES_MULTIPLE_DATABASES: "martydb,trust_db,credentials_db,audit_db"
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - microsoft_demo_postgres_data:/var/lib/postgresql/data
      - ../../../scripts/init-demo-db.sql:/docker-entrypoint-initdb.d/init-demo-db.sql
    networks:
      - marty-microsoft-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-martyuser} -d ${POSTGRES_DB:-martydb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # OID4VCI Issuer API - Microsoft Authenticator credential issuance
  issuer-api-microsoft:
    image: python:3.10-slim
    container_name: marty-microsoft-issuer-api
    environment:
      - ISSUER_BASE_URL=${ISSUER_BASE_URL:-http://localhost:8000}
      - CREDENTIAL_ISSUER_DID=${CREDENTIAL_ISSUER_DID:-did:web:localhost%3A8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8000,http://localhost:8001}
      - PORT_FORWARD_MODE=${PORT_FORWARD_MODE:-true}
      - PYTHONPATH=/app
    ports:
      - "${ISSUER_PORT:-8000}:8000"
    working_dir: /app
    command:
      - bash
      - -c
      - |
        echo "Installing dependencies..."
        pip install --no-cache-dir fastapi uvicorn[standard] pydantic qrcode[pil] jinja2 python-multipart

        echo "Starting Microsoft Demo Issuer API..."
        python -m uvicorn issuer_api:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../issuer_api.py:/app/issuer_api.py:ro
      - ../verifier_api.py:/app/verifier_api.py:ro
      - ../__init__.py:/app/__init__.py:ro
    networks:
      - marty-microsoft-network
    depends_on:
      postgres-microsoft:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # OID4VP Verifier API - Microsoft Authenticator credential verification
  verifier-api-microsoft:
    image: python:3.10-slim
    container_name: marty-microsoft-verifier-api
    environment:
      - VERIFIER_BASE_URL=${VERIFIER_BASE_URL:-http://localhost:8001}
      - VERIFIER_DID=${VERIFIER_DID:-did:web:localhost%3A8001}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8000,http://localhost:8001}
      - PORT_FORWARD_MODE=${PORT_FORWARD_MODE:-true}
      - PYTHONPATH=/app
    ports:
      - "${VERIFIER_PORT:-8001}:8001"
    working_dir: /app
    command:
      - bash
      - -c
      - |
        echo "Installing dependencies..."
        pip install --no-cache-dir fastapi uvicorn[standard] pydantic qrcode[pil] jinja2 python-multipart

        echo "Starting Microsoft Demo Verifier API..."
        python -m uvicorn verifier_api:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - ../issuer_api.py:/app/issuer_api.py:ro
      - ../verifier_api.py:/app/verifier_api.py:ro
      - ../__init__.py:/app/__init__.py:ro
    networks:
      - marty-microsoft-network
    depends_on:
      postgres-microsoft:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Environment variables example:
# Create a .env.demo file in the same directory with:
#
# # API Configuration
# ISSUER_BASE_URL=https://your-port-8000.preview.app.github.dev
# VERIFIER_BASE_URL=https://your-port-8001.preview.app.github.dev
# CREDENTIAL_ISSUER_DID=did:web:your-port-8000.preview.app.github.dev
#
# # Service Ports
# ISSUER_PORT=8000
# VERIFIER_PORT=8001
#
# # CORS Configuration
# CORS_ORIGINS=https://your-port-8000.preview.app.github.dev,https://your-port-8001.preview.app.github.dev
#
# # Database Configuration
# POSTGRES_USER=martyuser
# POSTGRES_PASSWORD=martypassword
# POSTGRES_DB=martydb
# POSTGRES_PORT=5433
#
# # Logging
# LOG_LEVEL=INFO
