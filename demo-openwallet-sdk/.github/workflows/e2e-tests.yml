name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: demo-openwallet-sdk/tests/package-lock.json

    - name: Setup Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/kubectl

    - name: Build demo services
      working-directory: demo-openwallet-sdk
      run: |
        chmod +x build.sh
        ./build.sh

    - name: Deploy demo to Kind
      working-directory: demo-openwallet-sdk
      run: |
        chmod +x deploy-k8s.sh
        ./deploy-k8s.sh

    - name: Wait for demo to be ready
      run: |
        echo "Waiting for demo services to be ready..."
        timeout 300 bash -c 'until curl -f http://localhost > /dev/null 2>&1; do sleep 5; done'
        echo "Demo is ready!"

    - name: Install test dependencies
      working-directory: demo-openwallet-sdk/tests
      run: |
        npm ci
        npx playwright install --with-deps ${{ matrix.browser }}

    - name: Run E2E tests
      working-directory: demo-openwallet-sdk/tests
      run: |
        npx playwright test --project=${{ matrix.browser }} --reporter=junit
      env:
        BASE_URL: http://localhost

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: |
          demo-openwallet-sdk/tests/test-results/
          demo-openwallet-sdk/tests/test-results.xml
          demo-openwallet-sdk/tests/playwright-report/
        retention-days: 7

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.browser }}
        path: demo-openwallet-sdk/tests/test-results/screenshots/
        retention-days: 7

    - name: Collect logs
      if: failure()
      run: |
        echo "=== Docker containers ==="
        docker ps -a
        echo "=== Kind cluster info ==="
        kubectl cluster-info
        echo "=== Pod status ==="
        kubectl get pods -A
        echo "=== Service status ==="
        kubectl get services -A
        echo "=== Recent events ==="
        kubectl get events --sort-by='.lastTimestamp' -A

    - name: Cleanup
      if: always()
      working-directory: demo-openwallet-sdk
      run: |
        chmod +x cleanup.sh
        ./cleanup.sh || true
